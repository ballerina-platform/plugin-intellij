/*
 * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

plugins {
    id "org.jetbrains.intellij" version "0.4.9"
    id "de.undercouch.download" version "3.4.3"
    id "org.sonarqube" version "2.6"
}

version = ballerinaPluginVersion

repositories {
    mavenCentral()
    maven { url 'http://dl.bintray.com/jetbrains/intellij-plugin-service' }
    maven { url 'https://jitpack.io' }
}

// LSP Dependencies
dependencies {
    compile group: 'org.eclipse.lsp4j', name: 'org.eclipse.lsp4j', version: '0.8.1'
    compile group: 'org.eclipse.lsp4j', name: 'org.eclipse.lsp4j.debug', version: '0.7.1'
    compile group: 'com.vladsch.flexmark', name: 'flexmark', version: '0.34.58'
    compile group: 'com.github.ballerina-platform', name: 'lsp4intellij', version: '0.94.2'
    compile group: 'com.github.jknack', name: 'handlebars', version: '4.1.2'
    configurations.compile.exclude(group: 'org.slf4j', module: 'slf4j-api')
}

apply plugin: 'java'
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'src/main/gen']
        }
    }
}

apply plugin: 'org.jetbrains.intellij'
intellij {
    // For a full list of IntelliJ IDEA releases, please see https://www.jetbrains.com/intellij-repository/releases.

    version ideaVersion
    pluginName ballerinaPluginName
    updateSinceUntilBuild false
    plugins 'java'
    // plugins 'coverage' //Bundled plugin dependencies
    // Uncomment this line to test the plugin using small IDEs. Add -Dorg.gradle.project.localIdePath="IDE_HOME_PATH"
    // VM option in run config.
    // alternativeIdePath localIdePath
}

task downloadPsiViewerPlugin(type: Download) {
    src 'https://plugins.jetbrains.com/plugin/download?updateId=31087'
    dest new File("${buildDir}/tmp/plugins/", 'PsiViewer.jar')
    onlyIfNewer true
}

apply plugin: "jacoco"
jacoco {
    toolVersion = "0.8.1"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

task copyPsiViewerPluginToSandBox(type: Copy) {
    from "${buildDir}/tmp/plugins/PsiViewer.jar"
    into "${buildDir}/idea-sandbox/plugins/"
}

copyPsiViewerPluginToSandBox.dependsOn downloadPsiViewerPlugin
copyPsiViewerPluginToSandBox.mustRunAfter prepareSandbox
runIde.dependsOn copyPsiViewerPluginToSandBox

apply plugin: 'checkstyle'
checkstyle {
    configFile rootProject.file("src/main/resources/checkstyle/checkstyle.xml")
    checkstyleMain {
        source = fileTree("src/main/java")
        include '**/*.java'
    }
    checkstyleTest {
        source = fileTree("src/test/java")
    }
}

runIde.dependsOn check
buildPlugin.dependsOn check
