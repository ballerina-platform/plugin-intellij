import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('file')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('filepath')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Get the path of the current directory.')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Current directory: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('file')
: (':')
identifier ('getCurrentDirectory')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Create a new directory.')
WHITE_SPACE ('\n    ')
string ('string')
| ('|')
error ('error')
WHITE_SPACE (' ')
identifier ('createDirResults')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('file')
: (':')
identifier ('createDir')
( ('(')
QUOTED_STRING_LITERAL ('"foo"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('createDirResults')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
string ('string')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Created directory path: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('createDirResults')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Create a new directory with any none-existent parents.')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('dirPath')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
checkpanic ('checkpanic')
WHITE_SPACE (' ')
identifier ('filepath')
: (':')
identifier ('build')
( ('(')
QUOTED_STRING_LITERAL ('"foo"')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"bar"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('createDirResults')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('file')
: (':')
identifier ('createDir')
( ('(')
identifier ('dirPath')
, (',')
WHITE_SPACE (' ')
BOOLEAN_LITERAL ('true')
) (')')
; (';')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('createDirResults')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
string ('string')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Created nested directory path: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('createDirResults')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Create a file in the given file path.')
WHITE_SPACE ('\n    ')
string ('string')
| ('|')
error ('error')
WHITE_SPACE (' ')
identifier ('createFileResults')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('file')
: (':')
identifier ('createFile')
( ('(')
QUOTED_STRING_LITERAL ('"bar.txt"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('createFileResults')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
string ('string')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Created file path: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('createFileResults')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Get metadata information of the file.')
WHITE_SPACE ('\n    ')
identifier ('file')
: (':')
identifier ('FileInfo')
| ('|')
error ('error')
WHITE_SPACE (' ')
identifier ('fileInfoResults')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('file')
: (':')
identifier ('getFileInfo')
( ('(')
QUOTED_STRING_LITERAL ('"bar.txt"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('fileInfoResults')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
identifier ('file')
: (':')
identifier ('FileInfo')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"File name: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('fileInfoResults')
. ('.')
identifier ('getName')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"File size: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('fileInfoResults')
. ('.')
identifier ('getSize')
( ('(')
) (')')
. ('.')
identifier ('toString')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Is directory: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('fileInfoResults')
. ('.')
identifier ('isDir')
( ('(')
) (')')
. ('.')
identifier ('toString')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Modified at "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE ('\n                        ')
identifier ('fileInfoResults')
. ('.')
identifier ('getLastModifiedTime')
( ('(')
) (')')
. ('.')
identifier ('toString')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Check whether the file or directory of the provided path exists.')
WHITE_SPACE ('\n    ')
boolean ('boolean')
WHITE_SPACE (' ')
identifier ('fileExists')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('file')
: (':')
identifier ('exists')
( ('(')
QUOTED_STRING_LITERAL ('"bar.txt"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"bar.txt file exists: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('fileExists')
. ('.')
identifier ('toString')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Copy the file or directory to the new path.')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('filePath')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
checkpanic ('checkpanic')
WHITE_SPACE (' ')
identifier ('filepath')
: (':')
identifier ('build')
( ('(')
QUOTED_STRING_LITERAL ('"foo"')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"bar"')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"bar.txt"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
error ('error')
? ('?')
WHITE_SPACE (' ')
identifier ('copyDirResults')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('file')
: (':')
identifier ('copy')
( ('(')
QUOTED_STRING_LITERAL ('"bar.txt"')
, (',')
WHITE_SPACE (' ')
identifier ('filePath')
, (',')
WHITE_SPACE (' ')
BOOLEAN_LITERAL ('true')
) (')')
; (';')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('copyDirResults')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
( ('(')
) (')')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"bar.txt file is copied to new path "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('filePath')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Rename(Move) the file or directory to the new path.')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('newFilePath')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
checkpanic ('checkpanic')
WHITE_SPACE (' ')
identifier ('filepath')
: (':')
identifier ('build')
( ('(')
QUOTED_STRING_LITERAL ('"foo"')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"bar1.txt"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
error ('error')
? ('?')
WHITE_SPACE (' ')
identifier ('renameResults')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('file')
: (':')
identifier ('rename')
( ('(')
QUOTED_STRING_LITERAL ('"bar.txt"')
, (',')
WHITE_SPACE (' ')
identifier ('newFilePath')
) (')')
; (';')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('renameResults')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
( ('(')
) (')')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"bar.txt file is moved to new path "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('newFilePath')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Get the default directory used for temporary files.')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('tempDirPath')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('file')
: (':')
identifier ('tempDir')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Temporary directory: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('tempDirPath')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Get the list of files in the directory.')
WHITE_SPACE ('\n    ')
identifier ('file')
: (':')
identifier ('FileInfo')
[ ('[')
] (']')
| ('|')
error ('error')
WHITE_SPACE (' ')
identifier ('readDirResults')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('file')
: (':')
identifier ('readDir')
( ('(')
QUOTED_STRING_LITERAL ('"foo"')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Remove the file or directory in the specified file path.')
WHITE_SPACE ('\n    ')
error ('error')
? ('?')
WHITE_SPACE (' ')
identifier ('removeResults')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('file')
: (':')
identifier ('remove')
( ('(')
identifier ('newFilePath')
) (')')
; (';')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('removeResults')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
( ('(')
) (')')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Remove file at "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('newFilePath')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Remove the directory in the specified file path with all its children.')
WHITE_SPACE ('\n    ')
identifier ('removeResults')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('file')
: (':')
identifier ('remove')
( ('(')
QUOTED_STRING_LITERAL ('"foo"')
, (',')
WHITE_SPACE (' ')
BOOLEAN_LITERAL ('true')
) (')')
; (';')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('removeResults')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
( ('(')
) (')')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Remove foo directory with all child elements."')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
