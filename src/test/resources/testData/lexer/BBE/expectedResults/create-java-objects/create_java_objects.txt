import ('import')
WHITE_SPACE (' ')
identifier ('ballerinax')
/ ('/')
identifier ('java')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// The `@java:Constructor` annotation links the default constructor of')
WHITE_SPACE ('\n')
LINE_COMMENT ('// the class `java.util.ArrayDeque` with this Ballerina function declaration.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('newArrayDeque')
( ('(')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
handle ('handle')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
@ ('@')
identifier ('java')
: (':')
identifier ('Constructor')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('class')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"java.util.ArrayDeque"')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE (' ')
external ('external')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// This ballerina function is linked with the `java.util.ArrayDeque` constructor that takes the initial capacity.')
WHITE_SPACE ('\n')
LINE_COMMENT ('// There are other overloaded constructors that take a single parameter in this class.')
WHITE_SPACE ('\n')
LINE_COMMENT ('// To link with the exact constructor, you can specify the `paramTypes` field. Refer to the `Overloaded')
WHITE_SPACE ('\n')
LINE_COMMENT ('// Methods/Constructors` section for more details on dealing with overloaded methods and constructors.')
WHITE_SPACE ('\n')
LINE_COMMENT ('// This function returns a `handle` value, which refers to an object of `java.util.ArrayDeque` class.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('newArrayDequeWithInitialCapacity')
( ('(')
int ('int')
WHITE_SPACE (' ')
identifier ('numElements')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
handle ('handle')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
@ ('@')
identifier ('java')
: (':')
identifier ('Constructor')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('class')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"java.util.ArrayDeque"')
, (',')
WHITE_SPACE ('\n    ')
identifier ('paramTypes')
: (':')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"int"')
] (']')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE (' ')
external ('external')
; (';')
WHITE_SPACE ('\n\n\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Create a new `java.util.ArrayDeque` object by invoking the default constructor via `newArrayDeque` function.')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('arrayDeque')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('newArrayDeque')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('arrayDeque')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Create a new `java.util.ArrayDeque` object by invoking the constructor that takes an `int` argument')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// via `newArrayDeque` function.')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('arrayDequeWithCapacity')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('newArrayDequeWithInitialCapacity')
( ('(')
DECIMAL_INTEGER_LITERAL ('10')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('arrayDequeWithCapacity')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
