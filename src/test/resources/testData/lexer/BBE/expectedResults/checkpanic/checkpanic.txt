import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('lang')
. ('.')
identifier (''int')
WHITE_SPACE (' ')
as ('as')
WHITE_SPACE (' ')
identifier ('ints')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// The `parse()` function takes a `string` argument and attempts to convert it to an `int`.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('parse')
( ('(')
string ('string')
WHITE_SPACE (' ')
identifier ('num')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
int ('int')
| ('|')
error ('error')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
return ('return')
WHITE_SPACE (' ')
identifier ('ints')
: (':')
identifier ('fromString')
( ('(')
identifier ('num')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// The `checkpanic` unary operator can be used to lift errors.')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// In this instance, `checkpanic` is used to lift the (potential) error')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// returned by the `parse()` function. If the actual value returned')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// by the function is an `error`, the function immediately panics')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// with the error.')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Passing a valid integer as a `string` will return an `int`.')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('y')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
checkpanic ('checkpanic')
WHITE_SPACE (' ')
identifier ('parse')
( ('(')
QUOTED_STRING_LITERAL ('"120"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('y')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Passing a random `string` will result in a `panic`.')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('z')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
checkpanic ('checkpanic')
WHITE_SPACE (' ')
identifier ('parse')
( ('(')
QUOTED_STRING_LITERAL ('"Invalid"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('z')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
