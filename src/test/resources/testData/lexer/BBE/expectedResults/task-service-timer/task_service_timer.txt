import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('log')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('task')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// The Task Timer configuration record to configure the Task Listener.')
WHITE_SPACE ('\n')
identifier ('task')
: (':')
identifier ('TimerConfiguration')
WHITE_SPACE (' ')
identifier ('timerConfiguration')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('intervalInMillis')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1000')
, (',')
WHITE_SPACE ('\n    ')
identifier ('initialDelayInMillis')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('3000')
, (',')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Number of recurrences will limit the number of times the timer runs.')
WHITE_SPACE ('\n    ')
identifier ('noOfRecurrences')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('10')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Initialize the listener using the above defined configurations.')
WHITE_SPACE ('\n')
listener ('listener')
WHITE_SPACE (' ')
identifier ('task')
: (':')
identifier ('Listener')
WHITE_SPACE (' ')
identifier ('timer')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
( ('(')
identifier ('timerConfiguration')
) (')')
; (';')
WHITE_SPACE ('\n\n')
int ('int')
WHITE_SPACE (' ')
identifier ('count')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('0')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Creating a service on the task Listener.')
WHITE_SPACE ('\n')
service ('service')
WHITE_SPACE (' ')
identifier ('timerService')
WHITE_SPACE (' ')
on ('on')
WHITE_SPACE (' ')
identifier ('timer')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// This resource triggers when the timer goes off.')
WHITE_SPACE ('\n    ')
resource ('resource')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('onTrigger')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('log')
: (':')
identifier ('printInfo')
( ('(')
QUOTED_STRING_LITERAL ('"Cleaning up..."')
) (')')
; (';')
WHITE_SPACE ('\n        ')
identifier ('log')
: (':')
identifier ('printInfo')
( ('(')
identifier ('count')
. ('.')
identifier ('toString')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n        ')
identifier ('count')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('count')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
