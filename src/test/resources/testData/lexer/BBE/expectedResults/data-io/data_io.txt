import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('log')
; (';')
WHITE_SPACE ('\n\n')
public ('public')
WHITE_SPACE (' ')
type ('type')
WHITE_SPACE (' ')
identifier ('Person')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
LEFT_CLOSED_RECORD_DELIMITER ('{|')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('name')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('""')
; (';')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('age')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('0')
; (';')
WHITE_SPACE ('\n    ')
float ('float')
WHITE_SPACE (' ')
identifier ('income')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_FLOATING_POINT_NUMBER ('0.0')
; (';')
WHITE_SPACE ('\n    ')
boolean ('boolean')
WHITE_SPACE (' ')
identifier ('isMarried')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
BOOLEAN_LITERAL ('false')
; (';')
WHITE_SPACE ('\n')
RIGHT_CLOSED_RECORD_DELIMITER ('|}')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Serializes the record into binary.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('serialize')
( ('(')
identifier ('Person')
WHITE_SPACE (' ')
identifier ('p')
, (',')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('WritableByteChannel')
WHITE_SPACE (' ')
identifier ('byteChannel')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('WritableDataChannel')
WHITE_SPACE (' ')
identifier ('dc')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('WritableDataChannel')
( ('(')
identifier ('byteChannel')
) (')')
; (';')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('length')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('p')
. ('.')
identifier ('name')
. ('.')
identifier ('toBytes')
( ('(')
) (')')
. ('.')
identifier ('length')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('lengthResult')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('dc')
. ('.')
identifier ('writeInt32')
( ('(')
identifier ('length')
) (')')
; (';')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('nameResult')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('dc')
. ('.')
identifier ('writeString')
( ('(')
identifier ('p')
. ('.')
identifier ('name')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"UTF-8"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('ageResult')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('dc')
. ('.')
identifier ('writeInt16')
( ('(')
identifier ('p')
. ('.')
identifier ('age')
) (')')
; (';')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('incomeResult')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('dc')
. ('.')
identifier ('writeFloat64')
( ('(')
identifier ('p')
. ('.')
identifier ('income')
) (')')
; (';')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('maritalStatusResult')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('dc')
. ('.')
identifier ('writeBool')
( ('(')
identifier ('p')
. ('.')
identifier ('isMarried')
) (')')
; (';')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('closeResult')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('dc')
. ('.')
identifier ('close')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('//Deserializes the record from binary.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('deserialize')
( ('(')
identifier ('io')
: (':')
identifier ('ReadableByteChannel')
WHITE_SPACE (' ')
identifier ('byteChannel')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
identifier ('Person')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('Person')
WHITE_SPACE (' ')
identifier ('person')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('nameLength')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('0')
; (';')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('nameValue')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('ReadableDataChannel')
WHITE_SPACE (' ')
identifier ('dc')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('ReadableDataChannel')
( ('(')
identifier ('byteChannel')
) (')')
; (';')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('//Reads a 32-bit-signed integer.')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('int32Result')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('dc')
. ('.')
identifier ('readInt32')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('int32Result')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
int ('int')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('nameLength')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('int32Result')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error occurred while reading name length"')
, (',')
WHITE_SPACE ('\n                        ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('int32Result')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('//Reads a UTF-8-encoded string represented through the specified amounts of bytes.')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('strResult')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('dc')
. ('.')
identifier ('readString')
( ('(')
identifier ('nameLength')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"UTF-8"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('strResult')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
string ('string')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('person')
. ('.')
identifier ('name')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('strResult')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error occurred while reading name"')
, (',')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('strResult')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('//Reads a 16-bit-signed integer.')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('int16Result')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('dc')
. ('.')
identifier ('readInt16')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('int16Result')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
int ('int')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('person')
. ('.')
identifier ('age')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('int16Result')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error occurred while reading age"')
, (',')
WHITE_SPACE ('\n                        ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('int16Result')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('//Reads a 64-bit-signed float.')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('float64Result')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('dc')
. ('.')
identifier ('readFloat64')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('float64Result')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
float ('float')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('person')
. ('.')
identifier ('income')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('float64Result')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error occurred while reading income"')
, (',')
WHITE_SPACE ('\n                        ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('float64Result')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('//Reads a boolean.')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('boolResult')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('dc')
. ('.')
identifier ('readBool')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('boolResult')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
boolean ('boolean')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('person')
. ('.')
identifier ('isMarried')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('boolResult')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error occurred while reading marital status"')
, (',')
WHITE_SPACE ('\n                        ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('boolResult')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('//Finally closes the data channel.')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('closeResult')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('dc')
. ('.')
identifier ('close')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n    ')
return ('return')
WHITE_SPACE (' ')
identifier ('person')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('//Serializes and writes the record to a file.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('writeRecordToFile')
( ('(')
identifier ('Person')
WHITE_SPACE (' ')
identifier ('p')
, (',')
WHITE_SPACE (' ')
string ('string')
WHITE_SPACE (' ')
identifier ('path')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
error ('error')
? ('?')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('WritableByteChannel')
WHITE_SPACE (' ')
identifier ('wc')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
check ('check')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('openWritableFile')
( ('(')
identifier ('path')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('serialize')
( ('(')
identifier ('p')
, (',')
WHITE_SPACE (' ')
identifier ('wc')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('//Reads the serialized record from the file.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('readRecordFromFile')
( ('(')
string ('string')
WHITE_SPACE (' ')
identifier ('path')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
@ ('@')
identifier ('tainted')
WHITE_SPACE (' ')
identifier ('Person')
WHITE_SPACE (' ')
| ('|')
WHITE_SPACE (' ')
error ('error')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('ReadableByteChannel')
WHITE_SPACE (' ')
identifier ('rc')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
check ('check')
WHITE_SPACE (' ')
identifier ('io')
: (':')
identifier ('openReadableFile')
( ('(')
identifier ('path')
) (')')
; (';')
WHITE_SPACE ('\n    ')
return ('return')
WHITE_SPACE (' ')
identifier ('deserialize')
( ('(')
identifier ('rc')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
error ('error')
? ('?')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('Person')
WHITE_SPACE (' ')
identifier ('wPerson')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Ballerina"')
, (',')
WHITE_SPACE (' ')
identifier ('age')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('21')
, (',')
WHITE_SPACE ('\n                       ')
identifier ('income')
: (':')
WHITE_SPACE (' ')
DECIMAL_FLOATING_POINT_NUMBER ('1543.12')
, (',')
WHITE_SPACE (' ')
identifier ('isMarried')
: (':')
WHITE_SPACE (' ')
BOOLEAN_LITERAL ('true')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('//Writes the record to a file.')
WHITE_SPACE ('\n    ')
check ('check')
WHITE_SPACE (' ')
identifier ('writeRecordToFile')
( ('(')
identifier ('wPerson')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"./files/person.bin"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Person record successfully written to file"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('//Reads record from a file.')
WHITE_SPACE ('\n    ')
identifier ('Person')
WHITE_SPACE (' ')
identifier ('rPerson')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
check ('check')
WHITE_SPACE (' ')
identifier ('readRecordFromFile')
( ('(')
QUOTED_STRING_LITERAL ('"./files/person.bin"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Reading person record from file"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('rPerson')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
