import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('http')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('log')
; (';')
WHITE_SPACE ('\n\n')
service ('service')
WHITE_SPACE (' ')
identifier ('sample')
WHITE_SPACE (' ')
on ('on')
WHITE_SPACE (' ')
new ('new')
WHITE_SPACE (' ')
identifier ('http')
: (':')
identifier ('Listener')
( ('(')
DECIMAL_INTEGER_LITERAL ('9090')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
@ ('@')
identifier ('http')
: (':')
identifier ('ResourceConfig')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('methods')
: (':')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"GET"')
] (']')
, (',')
WHITE_SPACE ('\n        ')
identifier ('path')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"/path/{foo}"')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// The `PathParam` and `QueryParam` parameters extract values from the request URI.')
WHITE_SPACE ('\n    ')
resource ('resource')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('params')
( ('(')
identifier ('http')
: (':')
identifier ('Caller')
WHITE_SPACE (' ')
identifier ('caller')
, (',')
WHITE_SPACE (' ')
identifier ('http')
: (':')
identifier ('Request')
WHITE_SPACE (' ')
identifier ('req')
, (',')
WHITE_SPACE ('\n                                ')
string ('string')
WHITE_SPACE (' ')
identifier ('foo')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
LINE_COMMENT ('// Get the `QueryParam` value for a given parameter key.')
WHITE_SPACE ('\n        ')
var ('var')
WHITE_SPACE (' ')
identifier ('bar')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('req')
. ('.')
identifier ('getQueryParamValue')
( ('(')
QUOTED_STRING_LITERAL ('"bar"')
) (')')
; (';')
WHITE_SPACE ('\n\n        ')
LINE_COMMENT ('// Get the `MatrixParams`.')
WHITE_SPACE ('\n        ')
map ('map')
< ('<')
any ('any')
> ('>')
WHITE_SPACE (' ')
identifier ('pathMParams')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('req')
. ('.')
identifier ('getMatrixParams')
( ('(')
QUOTED_STRING_LITERAL ('"/sample/path"')
) (')')
; (';')
WHITE_SPACE ('\n        ')
var ('var')
WHITE_SPACE (' ')
identifier ('a')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
< ('<')
string ('string')
> ('>')
identifier ('pathMParams')
[ ('[')
QUOTED_STRING_LITERAL ('"a"')
] (']')
; (';')
WHITE_SPACE ('\n        ')
var ('var')
WHITE_SPACE (' ')
identifier ('b')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
< ('<')
string ('string')
> ('>')
identifier ('pathMParams')
[ ('[')
QUOTED_STRING_LITERAL ('"b"')
] (']')
; (';')
WHITE_SPACE ('\n        ')
string ('string')
WHITE_SPACE (' ')
identifier ('pathMatrixStr')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
STRING_TEMPLATE_LITERAL_START ('string `')
STRING_TEMPLATE_EXPRESSION_START ('a=${')
identifier ('a')
STRING_TEMPLATE_EXPRESSION_END ('}')
STRING_TEMPLATE_EXPRESSION_START (', b=${')
identifier ('b')
STRING_TEMPLATE_EXPRESSION_END ('}')
STRING_TEMPLATE_LITERAL_END ('`')
; (';')
WHITE_SPACE ('\n        ')
map ('map')
< ('<')
any ('any')
> ('>')
WHITE_SPACE (' ')
identifier ('fooMParams')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('req')
. ('.')
identifier ('getMatrixParams')
( ('(')
QUOTED_STRING_LITERAL ('"/sample/path/"')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('foo')
) (')')
; (';')
WHITE_SPACE ('\n        ')
var ('var')
WHITE_SPACE (' ')
identifier ('x')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
< ('<')
string ('string')
> ('>')
identifier ('fooMParams')
[ ('[')
QUOTED_STRING_LITERAL ('"x"')
] (']')
; (';')
WHITE_SPACE ('\n        ')
var ('var')
WHITE_SPACE (' ')
identifier ('y')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
< ('<')
string ('string')
> ('>')
identifier ('fooMParams')
[ ('[')
QUOTED_STRING_LITERAL ('"y"')
] (']')
; (';')
WHITE_SPACE ('\n        ')
string ('string')
WHITE_SPACE (' ')
identifier ('fooMatrixStr')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
STRING_TEMPLATE_LITERAL_START ('string `')
STRING_TEMPLATE_EXPRESSION_START ('x=${')
identifier ('x')
STRING_TEMPLATE_EXPRESSION_END ('}')
STRING_TEMPLATE_EXPRESSION_START (', y=${')
identifier ('y')
STRING_TEMPLATE_EXPRESSION_END ('}')
STRING_TEMPLATE_LITERAL_END ('`')
; (';')
WHITE_SPACE ('\n        ')
json ('json')
WHITE_SPACE (' ')
identifier ('matrixJson')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"path"')
: (':')
WHITE_SPACE (' ')
identifier ('pathMatrixStr')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"foo"')
: (':')
WHITE_SPACE (' ')
identifier ('fooMatrixStr')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n\n        ')
LINE_COMMENT ('// Create a JSON payload with the extracted values.')
WHITE_SPACE ('\n        ')
json ('json')
WHITE_SPACE (' ')
identifier ('responseJson')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"pathParam"')
: (':')
WHITE_SPACE (' ')
identifier ('foo')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"queryParam"')
: (':')
WHITE_SPACE (' ')
identifier ('bar')
, (',')
WHITE_SPACE ('\n                                ')
QUOTED_STRING_LITERAL ('"matrix"')
: (':')
WHITE_SPACE (' ')
identifier ('matrixJson')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n        ')
identifier ('http')
: (':')
identifier ('Response')
WHITE_SPACE (' ')
identifier ('res')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
; (';')
WHITE_SPACE ('\n        ')
LINE_COMMENT ('// A util method to set the JSON payload to the response message.')
WHITE_SPACE ('\n        ')
identifier ('res')
. ('.')
identifier ('setJsonPayload')
( ('(')
< ('<')
@ ('@')
identifier ('untainted')
> ('>')
WHITE_SPACE (' ')
identifier ('responseJson')
) (')')
; (';')
WHITE_SPACE ('\n        ')
LINE_COMMENT ('// Send a response to the client.')
WHITE_SPACE ('\n        ')
var ('var')
WHITE_SPACE (' ')
identifier ('result')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('caller')
-> ('->')
identifier ('respond')
( ('(')
identifier ('res')
) (')')
; (';')
WHITE_SPACE ('\n\n        ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('result')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
error ('error')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error when responding"')
, (',')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('result')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
