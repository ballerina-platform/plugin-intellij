import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
type ('type')
WHITE_SPACE (' ')
identifier ('Record')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('id')
; (';')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('name')
; (';')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('readRecord')
( ('(')
identifier ('Record')
? ('?')
WHITE_SPACE (' ')
identifier ('value')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('value')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
identifier ('Record')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n         ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Record ID: "')
, (',')
WHITE_SPACE (' ')
identifier ('value')
. ('.')
identifier ('id')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('", value: "')
, (',')
WHITE_SPACE (' ')
identifier ('value')
. ('.')
identifier ('name')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
LINE_COMMENT ('// Panics if `value` is `()`.')
WHITE_SPACE ('\n        ')
error ('error')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
error ('error')
( ('(')
QUOTED_STRING_LITERAL ('"Record is nil"')
) (')')
; (';')
WHITE_SPACE ('\n        ')
panic ('panic')
WHITE_SPACE (' ')
identifier ('err')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('Record')
WHITE_SPACE (' ')
identifier ('r1')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('id')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
, (',')
WHITE_SPACE (' ')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"record1"')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('readRecord')
( ('(')
identifier ('r1')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('Record')
? ('?')
WHITE_SPACE (' ')
identifier ('r2')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Record r2 is `nil`.')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('r2')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
identifier ('Record')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Record: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('r2')
. ('.')
identifier ('name')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
LINE_COMMENT ('// Since `r2` is `()`, `readRecord()` would panic.')
WHITE_SPACE ('\n        ')
identifier ('readRecord')
( ('(')
identifier ('r2')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// The following lines of code will not be executed.')
WHITE_SPACE ('\n    ')
identifier ('Record')
WHITE_SPACE (' ')
identifier ('r3')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('id')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('3')
, (',')
WHITE_SPACE (' ')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"record3"')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('readRecord')
( ('(')
identifier ('r3')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
