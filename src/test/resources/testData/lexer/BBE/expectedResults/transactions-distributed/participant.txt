import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('http')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('log')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('transactions')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// This service is a participant in the distributed transaction. It will get')
WHITE_SPACE ('\n')
LINE_COMMENT ('// infected when it receives a transaction context from the participant. The')
WHITE_SPACE ('\n')
LINE_COMMENT ('// transaction context, in the HTTP case, will be passed in as custom HTTP headers.')
WHITE_SPACE ('\n')
@ ('@')
identifier ('http')
: (':')
identifier ('ServiceConfig')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('basePath')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"/stockquote"')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n')
service ('service')
WHITE_SPACE (' ')
identifier ('ParticipantService')
WHITE_SPACE (' ')
on ('on')
WHITE_SPACE (' ')
new ('new')
WHITE_SPACE (' ')
identifier ('http')
: (':')
identifier ('Listener')
( ('(')
DECIMAL_INTEGER_LITERAL ('8889')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
@ ('@')
identifier ('http')
: (':')
identifier ('ResourceConfig')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('path')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"/update"')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
@ ('@')
identifier ('transactions')
: (':')
identifier ('Participant')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('oncommit')
: (':')
identifier ('printParticipantCommit')
, (',')
WHITE_SPACE ('\n        ')
identifier ('onabort')
: (':')
identifier ('printParticipantAbort')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
resource ('resource')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('updateStockQuote')
( ('(')
identifier ('http')
: (':')
identifier ('Caller')
WHITE_SPACE (' ')
identifier ('conn')
, (',')
WHITE_SPACE (' ')
identifier ('http')
: (':')
identifier ('Request')
WHITE_SPACE (' ')
identifier ('req')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('log')
: (':')
identifier ('printInfo')
( ('(')
QUOTED_STRING_LITERAL ('"Received update stockquote request"')
) (')')
; (';')
WHITE_SPACE ('\n        ')
identifier ('http')
: (':')
identifier ('Response')
WHITE_SPACE (' ')
identifier ('res')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
; (';')
WHITE_SPACE ('\n\n        ')
LINE_COMMENT ('// At the beginning of the `transaction` statement, since a transaction')
WHITE_SPACE ('\n        ')
LINE_COMMENT ('// context has been received, this service will register with the')
WHITE_SPACE ('\n        ')
LINE_COMMENT ('// initiator as a participant.')
WHITE_SPACE ('\n\n        ')
LINE_COMMENT ('// Print the current transaction ID')
WHITE_SPACE ('\n        ')
identifier ('log')
: (':')
identifier ('printInfo')
( ('(')
QUOTED_STRING_LITERAL ('"Joined transaction: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE ('\n                       ')
identifier ('transactions')
: (':')
identifier ('getCurrentTransactionId')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n\n        ')
var ('var')
WHITE_SPACE (' ')
identifier ('updateReq')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
< ('<')
@ ('@')
identifier ('untainted')
> ('>')
WHITE_SPACE (' ')
identifier ('req')
. ('.')
identifier ('getJsonPayload')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n        ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('updateReq')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
json ('json')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
string ('string')
WHITE_SPACE (' ')
identifier ('msg')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE ('\n                ')
identifier ('io')
: (':')
identifier ('sprintf')
( ('(')
QUOTED_STRING_LITERAL ('"Update stock quote request received. "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE ('\n                            ')
QUOTED_STRING_LITERAL ('"symbol:%s, price:%s"')
, (',')
WHITE_SPACE ('\n                            ')
identifier ('updateReq')
. ('.')
identifier ('symbol')
, (',')
WHITE_SPACE (' ')
identifier ('updateReq')
. ('.')
identifier ('price')
) (')')
; (';')
WHITE_SPACE ('\n            ')
identifier ('log')
: (':')
identifier ('printInfo')
( ('(')
identifier ('msg')
) (')')
; (';')
WHITE_SPACE ('\n\n            ')
json ('json')
WHITE_SPACE (' ')
identifier ('jsonRes')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"message"')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"updating stock"')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n            ')
identifier ('res')
. ('.')
identifier ('statusCode')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('http')
: (':')
identifier ('STATUS_OK')
; (';')
WHITE_SPACE ('\n            ')
identifier ('res')
. ('.')
identifier ('setJsonPayload')
( ('(')
identifier ('jsonRes')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('res')
. ('.')
identifier ('statusCode')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('http')
: (':')
identifier ('STATUS_INTERNAL_SERVER_ERROR')
; (';')
WHITE_SPACE ('\n            ')
identifier ('res')
. ('.')
identifier ('setPayload')
( ('(')
identifier ('updateReq')
. ('.')
identifier ('reason')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n            ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Payload error occurred!"')
, (',')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('updateReq')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n\n        ')
var ('var')
WHITE_SPACE (' ')
identifier ('result')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('conn')
-> ('->')
identifier ('respond')
( ('(')
identifier ('res')
) (')')
; (';')
WHITE_SPACE ('\n        ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('result')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
error ('error')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Could not send response back to initiator"')
, (',')
WHITE_SPACE ('\n                                 ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('result')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('log')
: (':')
identifier ('printInfo')
( ('(')
QUOTED_STRING_LITERAL ('"Sent response back to initiator"')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// The participant function that will get called when the distributed')
WHITE_SPACE ('\n')
LINE_COMMENT ('// transaction is aborted')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('printParticipantAbort')
( ('(')
string ('string')
WHITE_SPACE (' ')
identifier ('transactionId')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('log')
: (':')
identifier ('printInfo')
( ('(')
QUOTED_STRING_LITERAL ('"Participated transaction: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('transactionId')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('" aborted"')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// The participant function that will get called when the distributed')
WHITE_SPACE ('\n')
LINE_COMMENT ('// transaction is committed')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('printParticipantCommit')
( ('(')
string ('string')
WHITE_SPACE (' ')
identifier ('transactionId')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('log')
: (':')
identifier ('printInfo')
( ('(')
QUOTED_STRING_LITERAL ('"Participated transaction: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('transactionId')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('" committed"')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
