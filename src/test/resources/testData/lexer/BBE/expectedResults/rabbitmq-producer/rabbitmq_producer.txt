import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('rabbitmq')
; (';')
WHITE_SPACE ('\n\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Creates a ballerina RabbitMQ connection that allows re-usability if necessary.')
WHITE_SPACE ('\n    ')
identifier ('rabbitmq')
: (':')
identifier ('Connection')
WHITE_SPACE (' ')
identifier ('connection')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
( ('(')
{ ('{')
WHITE_SPACE (' ')
identifier ('host')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"localhost"')
, (',')
WHITE_SPACE (' ')
identifier ('port')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('5672')
WHITE_SPACE (' ')
} ('}')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Creates multiple ballerina RabbitMQ channels.')
WHITE_SPACE ('\n    ')
identifier ('rabbitmq')
: (':')
identifier ('Channel')
WHITE_SPACE (' ')
identifier ('newChannel1')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
( ('(')
identifier ('connection')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('rabbitmq')
: (':')
identifier ('Channel')
WHITE_SPACE (' ')
identifier ('newChannel2')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
( ('(')
identifier ('connection')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Declares the queue, MyQueue1.')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('queueResult1')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('newChannel1')
-> ('->')
identifier ('queueDeclare')
( ('(')
{ ('{')
WHITE_SPACE (' ')
identifier ('queueName')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"MyQueue1"')
WHITE_SPACE (' ')
} ('}')
) (')')
; (';')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('queueResult1')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
error ('error')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"An error occurred while creating the MyQueue1 queue."')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Declares the queue, MyQueue2.')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('queueResult2')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('newChannel2')
-> ('->')
identifier ('queueDeclare')
( ('(')
{ ('{')
WHITE_SPACE (' ')
identifier ('queueName')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"MyQueue2"')
WHITE_SPACE (' ')
} ('}')
) (')')
; (';')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('queueResult2')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
error ('error')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"An error occurred while creating the MyQueue2 queue."')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Publishing messages to an exchange using a routing key.')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Publishes the message using newChannel1 and the routing key named MyQueue1.')
WHITE_SPACE ('\n    ')
worker ('worker')
WHITE_SPACE (' ')
identifier ('w1')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
var ('var')
WHITE_SPACE (' ')
identifier ('sendResult')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('newChannel1')
-> ('->')
identifier ('basicPublish')
( ('(')
QUOTED_STRING_LITERAL ('"Hello from Ballerina"')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"MyQueue1"')
) (')')
; (';')
WHITE_SPACE ('\n        ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('sendResult')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
error ('error')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"An error occurred while sending the message to "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE ('\n                     ')
QUOTED_STRING_LITERAL ('"MyQueue1 using newChannel1."')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Publishing messages to the same routing key using a different channel.')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Publishes the message using newChannel2 and the same routing key named MyQueue1.')
WHITE_SPACE ('\n    ')
worker ('worker')
WHITE_SPACE (' ')
identifier ('w2')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
var ('var')
WHITE_SPACE (' ')
identifier ('sendResult')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('newChannel2')
-> ('->')
identifier ('basicPublish')
( ('(')
QUOTED_STRING_LITERAL ('"Hello from Ballerina"')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"MyQueue1"')
) (')')
; (';')
WHITE_SPACE ('\n        ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('sendResult')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
error ('error')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"An error occurred while sending the message to "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE ('\n                    ')
QUOTED_STRING_LITERAL ('"MyQueue1 using newChannel2."')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Publishing messages to different routing keys using the same channel.')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Publishes the message using newChannel1 to a different routing key named MyQueue2.')
WHITE_SPACE ('\n    ')
worker ('worker')
WHITE_SPACE (' ')
identifier ('w3')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
var ('var')
WHITE_SPACE (' ')
identifier ('sendResult')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('newChannel1')
-> ('->')
identifier ('basicPublish')
( ('(')
QUOTED_STRING_LITERAL ('"Hello from Ballerina"')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"MyQueue2"')
) (')')
; (';')
WHITE_SPACE ('\n        ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('sendResult')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
error ('error')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"An error occurred while sending the message to "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE ('\n                    ')
QUOTED_STRING_LITERAL ('"MyQueue2 using newChannel1."')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
identifier ('_')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
wait ('wait')
WHITE_SPACE (' ')
{ ('{')
identifier ('w1')
, (',')
WHITE_SPACE (' ')
identifier ('w2')
, (',')
WHITE_SPACE (' ')
identifier ('w3')
} ('}')
; (';')
WHITE_SPACE ('\n')
} ('}')
