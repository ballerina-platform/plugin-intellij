import ('import')
WHITE_SPACE (' ')
identifier ('ballerinax')
/ ('/')
identifier ('java')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// This Ballerina function invokes the `java.lang.StringBuffer` constructor that takes a')
WHITE_SPACE ('\n')
LINE_COMMENT ('// `java.lang.String` as an argument. The `java.lang.StringBuffer` class has other overloaded')
WHITE_SPACE ('\n')
LINE_COMMENT ('// constructors that take a single parameter. Therefore you need to specify the parameter types here.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('newStringBuffer')
( ('(')
handle ('handle')
WHITE_SPACE (' ')
identifier ('str')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
handle ('handle')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
@ ('@')
identifier ('java')
: (':')
identifier ('Constructor')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('class')
: (':')
QUOTED_STRING_LITERAL ('"java.lang.StringBuffer"')
, (',')
WHITE_SPACE ('\n    ')
identifier ('paramTypes')
: (':')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"java.lang.String"')
] (']')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE (' ')
external ('external')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// The `append` method in `java.lang.StringBuffer` is overloaded many methods that take a single parameter.')
WHITE_SPACE ('\n')
LINE_COMMENT ('// In this example, let's use two of those methods. The `appendString` function is linked with the Java `append`')
WHITE_SPACE ('\n')
LINE_COMMENT ('// method that takes a `java.lang.String` as an argument.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('appendString')
( ('(')
handle ('handle')
WHITE_SPACE (' ')
identifier ('receiver')
, (',')
WHITE_SPACE (' ')
handle ('handle')
WHITE_SPACE (' ')
identifier ('str')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
handle ('handle')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
@ ('@')
identifier ('java')
: (':')
identifier ('Method')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"append"')
, (',')
WHITE_SPACE ('\n    ')
identifier ('class')
: (':')
QUOTED_STRING_LITERAL ('"java.lang.StringBuffer"')
, (',')
WHITE_SPACE ('\n    ')
identifier ('paramTypes')
: (':')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"java.lang.String"')
] (']')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE (' ')
external ('external')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// This `appendStringBuffer` function is linked with the Java `append` method that takes a')
WHITE_SPACE ('\n')
LINE_COMMENT ('// `java.lang.StringBuffer` as an argument.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('appendStringBuffer')
( ('(')
handle ('handle')
WHITE_SPACE (' ')
identifier ('receiver')
, (',')
WHITE_SPACE (' ')
handle ('handle')
WHITE_SPACE (' ')
identifier ('strBuffer')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
handle ('handle')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
@ ('@')
identifier ('java')
: (':')
identifier ('Method')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"append"')
, (',')
WHITE_SPACE ('\n    ')
identifier ('class')
: (':')
QUOTED_STRING_LITERAL ('"java.lang.StringBuffer"')
, (',')
WHITE_SPACE ('\n    ')
identifier ('paramTypes')
: (':')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"java.lang.StringBuffer"')
] (']')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE (' ')
external ('external')
; (';')
WHITE_SPACE ('\n\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Create a new `java.lang.StringBuffer` by passing a Java string as an argument.')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('strBuffer')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('newStringBuffer')
( ('(')
identifier ('java')
: (':')
identifier ('fromString')
( ('(')
QUOTED_STRING_LITERAL ('"Ballerina is "')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('_')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('appendString')
( ('(')
identifier ('strBuffer')
, (',')
WHITE_SPACE (' ')
identifier ('java')
: (':')
identifier ('fromString')
( ('(')
QUOTED_STRING_LITERAL ('"awesome "')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('strBufferToAppend')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('newStringBuffer')
( ('(')
identifier ('java')
: (':')
identifier ('fromString')
( ('(')
QUOTED_STRING_LITERAL ('"and "')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('_')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('appendString')
( ('(')
identifier ('strBufferToAppend')
, (',')
WHITE_SPACE (' ')
identifier ('java')
: (':')
identifier ('fromString')
( ('(')
QUOTED_STRING_LITERAL ('"fun."')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Append an instance of a `java.lang.StringBuffer` to another `java.lang.StringBuffer` instance.')
WHITE_SPACE ('\n    ')
identifier ('_')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('appendStringBuffer')
( ('(')
identifier ('strBuffer')
, (',')
WHITE_SPACE (' ')
identifier ('strBufferToAppend')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
string ('string')
? ('?')
WHITE_SPACE (' ')
identifier ('text')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('java')
: (':')
identifier ('toString')
( ('(')
identifier ('strBuffer')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('text')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
