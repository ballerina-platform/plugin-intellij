import ('import')
WHITE_SPACE (' ')
identifier ('ballerinax')
/ ('/')
identifier ('java')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Let's create a Ballerina function to call the static method `randomUUID` in `java.util.UUID` class.')
WHITE_SPACE ('\n')
LINE_COMMENT ('// Here the `name` field is optional if the Ballerina function name is equal to the Java counterpart.')
WHITE_SPACE ('\n')
LINE_COMMENT ('// This method returns a handle value referring to a `java.util.UUID` instance.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('createRandomUUID')
( ('(')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
handle ('handle')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
@ ('@')
identifier ('java')
: (':')
identifier ('Method')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"randomUUID"')
, (',')
WHITE_SPACE ('\n    ')
identifier ('class')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"java.util.UUID"')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE (' ')
external ('external')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// The class `java.util.ArrayDeque` is a resizable array that allows you to add or remove an element from both sides.')
WHITE_SPACE ('\n')
LINE_COMMENT ('// Here `newArrayDeque` function is linked with the default constructor of the `java.util.ArrayDeque` class.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('newArrayDeque')
( ('(')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
handle ('handle')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
@ ('@')
identifier ('java')
: (':')
identifier ('Constructor')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('class')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"java.util.ArrayDeque"')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE (' ')
external ('external')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// The `offer` Ballerina function is linked with the instance method `offer` in `java.util.ArrayDeque` class.')
WHITE_SPACE ('\n')
LINE_COMMENT ('// This function inserts the element `e` at the end of the queue referred by the parameter `receiver`.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('offer')
( ('(')
handle ('handle')
WHITE_SPACE (' ')
identifier ('receiver')
, (',')
WHITE_SPACE (' ')
handle ('handle')
WHITE_SPACE (' ')
identifier ('e')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
boolean ('boolean')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
@ ('@')
identifier ('java')
: (':')
identifier ('Method')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('class')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"java.util.ArrayDeque"')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE (' ')
external ('external')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// The `poll` Ballerina function is linked with the instance method `poll` in `java.util.ArrayDeque` class.')
WHITE_SPACE ('\n')
LINE_COMMENT ('// This function removes the head element of the queue referred by the parameter `receiver`.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('poll')
( ('(')
handle ('handle')
WHITE_SPACE (' ')
identifier ('receiver')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
handle ('handle')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
@ ('@')
identifier ('java')
: (':')
identifier ('Method')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('class')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"java.util.ArrayDeque"')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE (' ')
external ('external')
; (';')
WHITE_SPACE ('\n\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Create a random UUID instance by invoking the `createRandomUUID` Ballerina function.')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// This function demonstrates how you can invoke Java static function in Ballerina.')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('uuid')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('createRandomUUID')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Create a new `java.util.ArrayDeque` instance.')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('arrayDeque')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('newArrayDeque')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Ballerina strings are different from Java strings. The `fromString` function in `ballerina/java` module converts')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// a Ballerina string value to a Java String representation. Java String is a reference type; hence,')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// this method returns a handle value referring to the created to Java string.')
WHITE_SPACE ('\n    ')
identifier ('_')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('offer')
( ('(')
identifier ('arrayDeque')
, (',')
WHITE_SPACE (' ')
identifier ('java')
: (':')
identifier ('fromString')
( ('(')
QUOTED_STRING_LITERAL ('"John"')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('_')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('offer')
( ('(')
identifier ('arrayDeque')
, (',')
WHITE_SPACE (' ')
identifier ('java')
: (':')
identifier ('fromString')
( ('(')
QUOTED_STRING_LITERAL ('"Jane"')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('_')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('offer')
( ('(')
identifier ('arrayDeque')
, (',')
WHITE_SPACE (' ')
identifier ('java')
: (':')
identifier ('fromString')
( ('(')
QUOTED_STRING_LITERAL ('"Peter"')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('nextInLineHandle')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('poll')
( ('(')
identifier ('arrayDeque')
) (')')
; (';')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// The `toString` function in `ballerina/java` module creates a Ballerina string')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// representation of the Java reference value.')
WHITE_SPACE ('\n    ')
string ('string')
? ('?')
WHITE_SPACE (' ')
identifier ('nextInLine')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('java')
: (':')
identifier ('toString')
( ('(')
identifier ('nextInLineHandle')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('nextInLine')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
