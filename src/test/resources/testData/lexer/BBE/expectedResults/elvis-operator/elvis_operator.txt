import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
string ('string')
? ('?')
WHITE_SPACE (' ')
identifier ('x')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// If you need to get the value of `x` if it is a `string`, or assign some')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// other `string` value if `x` is `()`, you can do it using the type-guard')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// as follows.')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('output')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('x')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
string ('string')
WHITE_SPACE (' ')
? ('?')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"value is string: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('x')
WHITE_SPACE (' ')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"value is nil"')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"The output from the type-guard: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('output')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// You can achieve the same using the elvis operator as follows.')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('elvisOutput')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('x')
WHITE_SPACE (' ')
ELVIS ('?:')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"value is nil"')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"The output from the elvis operator: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('elvisOutput')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
