import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Declare a module-level variable.')
WHITE_SPACE ('\n')
int ('int')
WHITE_SPACE (' ')
identifier ('total')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('99')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Declare a constant.')
WHITE_SPACE ('\n')
const ('const')
WHITE_SPACE (' ')
string ('string')
WHITE_SPACE (' ')
identifier ('OK')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"ok"')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Declare a `public` constant.')
WHITE_SPACE ('\n')
public ('public')
WHITE_SPACE (' ')
const ('const')
WHITE_SPACE (' ')
int ('int')
WHITE_SPACE (' ')
identifier ('COUNT')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Declare a final variable.')
WHITE_SPACE ('\n')
LINE_COMMENT ('// The value of the `final` variable is read-only. Once a value is assigned to a final')
WHITE_SPACE ('\n')
LINE_COMMENT ('// variable, it becomes immutable. All parameters of a function call are')
WHITE_SPACE ('\n')
LINE_COMMENT ('// implicitly final.')
WHITE_SPACE ('\n')
final ('final')
WHITE_SPACE (' ')
int ('int')
WHITE_SPACE (' ')
identifier ('status')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
; (';')
WHITE_SPACE ('\n\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Access a global variable.')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('total')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Access a public constant.')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('COUNT')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// This is a local variable.')
WHITE_SPACE ('\n    ')
boolean ('boolean')
WHITE_SPACE (' ')
identifier ('available')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
BOOLEAN_LITERAL ('false')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('available')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
