import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// The `main` function that accepts student information and prints out a formatted string.')
WHITE_SPACE ('\n')
LINE_COMMENT ('// The first parameter `name` is a required parameter, while the second parameter `age` is a defaultable')
WHITE_SPACE ('\n')
LINE_COMMENT ('// parameter with the default value `18`. The third parameter `year` is also a defaultable parameter.')
WHITE_SPACE ('\n')
LINE_COMMENT ('// The rest parameter `modules` represents the additional arguments.')
WHITE_SPACE ('\n')
LINE_COMMENT ('// The `main` function may return an `error` or `()`.')
WHITE_SPACE ('\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
string ('string')
WHITE_SPACE (' ')
identifier ('name')
, (',')
WHITE_SPACE ('\n                     ')
int ('int')
WHITE_SPACE (' ')
identifier ('age')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('18')
, (',')
WHITE_SPACE ('\n                     ')
string ('string')
WHITE_SPACE (' ')
identifier ('year')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Freshman"')
, (',')
WHITE_SPACE ('\n                     ')
string ('string')
... ('...')
WHITE_SPACE (' ')
identifier ('modules')
) (')')
WHITE_SPACE ('\n                  ')
returns ('returns')
WHITE_SPACE (' ')
error ('error')
? ('?')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Return an error if the name is invalid.')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('name')
. ('.')
identifier ('length')
( ('(')
) (')')
WHITE_SPACE (' ')
< ('<')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('5')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
error ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
error ('error')
( ('(')
QUOTED_STRING_LITERAL ('"InvalidName"')
, (',')
WHITE_SPACE (' ')
identifier ('message')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"invalid length"')
) (')')
; (';')
WHITE_SPACE ('\n        ')
return ('return')
WHITE_SPACE (' ')
identifier ('e')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('info')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
STRING_TEMPLATE_LITERAL_START ('string `')
STRING_TEMPLATE_EXPRESSION_START ('Name: ${')
identifier ('name')
STRING_TEMPLATE_EXPRESSION_END ('}')
STRING_TEMPLATE_EXPRESSION_START (', Age: ${')
identifier ('age')
STRING_TEMPLATE_EXPRESSION_END ('}')
STRING_TEMPLATE_EXPRESSION_START (', Year: ${')
identifier ('year')
STRING_TEMPLATE_EXPRESSION_END ('}')
STRING_TEMPLATE_LITERAL_END ('`')
; (';')
WHITE_SPACE ('\n\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('modules')
. ('.')
identifier ('length')
( ('(')
) (')')
WHITE_SPACE (' ')
> ('>')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('0')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('info')
WHITE_SPACE (' ')
+= ('+=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('", Module(s): "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('modules')
. ('.')
identifier ('toString')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('info')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
