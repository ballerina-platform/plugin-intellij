import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('auth')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('http')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('log')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Defines the sample backend service, which is secured with Basic Auth')
WHITE_SPACE ('\n')
LINE_COMMENT ('// authentication.')
WHITE_SPACE ('\n')
identifier ('auth')
: (':')
identifier ('InboundBasicAuthProvider')
WHITE_SPACE (' ')
identifier ('inboundBasicAuthProvider')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
; (';')
WHITE_SPACE ('\n')
identifier ('http')
: (':')
identifier ('BasicAuthHandler')
WHITE_SPACE (' ')
identifier ('inboundBasicAuthHandler')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
( ('(')
identifier ('inboundBasicAuthProvider')
) (')')
; (';')
WHITE_SPACE ('\n\n')
listener ('listener')
WHITE_SPACE (' ')
identifier ('http')
: (':')
identifier ('Listener')
WHITE_SPACE (' ')
identifier ('ep')
WHITE_SPACE ('  ')
= ('=')
WHITE_SPACE (' ')
new ('new')
( ('(')
DECIMAL_INTEGER_LITERAL ('9090')
, (',')
WHITE_SPACE (' ')
identifier ('config')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('auth')
: (':')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('authHandlers')
: (':')
WHITE_SPACE (' ')
[ ('[')
identifier ('inboundBasicAuthHandler')
] (']')
, (',')
WHITE_SPACE ('\n        ')
identifier ('scopes')
: (':')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"hello"')
] (']')
WHITE_SPACE ('\n    ')
} ('}')
, (',')
WHITE_SPACE ('\n    ')
identifier ('secureSocket')
: (':')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('keyStore')
: (':')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('path')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"${ballerina.home}/bre/security/ballerinaKeystore.p12"')
, (',')
WHITE_SPACE ('\n            ')
identifier ('password')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"ballerina"')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
) (')')
; (';')
WHITE_SPACE ('\n\n')
service ('service')
WHITE_SPACE (' ')
identifier ('hello')
WHITE_SPACE (' ')
on ('on')
WHITE_SPACE (' ')
identifier ('ep')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
resource ('resource')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('sayHello')
( ('(')
identifier ('http')
: (':')
identifier ('Caller')
WHITE_SPACE (' ')
identifier ('caller')
, (',')
WHITE_SPACE (' ')
identifier ('http')
: (':')
identifier ('Request')
WHITE_SPACE (' ')
identifier ('req')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
error ('error')
? ('?')
WHITE_SPACE (' ')
identifier ('result')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('caller')
-> ('->')
identifier ('respond')
( ('(')
QUOTED_STRING_LITERAL ('"Hello, World!!!"')
) (')')
; (';')
WHITE_SPACE ('\n        ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('result')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
error ('error')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error in responding to caller"')
, (',')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('result')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
