import ('import')
WHITE_SPACE (' ')
identifier ('ballerinax')
/ ('/')
identifier ('java')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Define a Ballerina function with an external function body whose implementation is provided by a Java method.')
WHITE_SPACE ('\n')
LINE_COMMENT ('// When a vararg is used in the Ballerina function signature, corresponding values are wrapped in')
WHITE_SPACE ('\n')
LINE_COMMENT ('// a Java array before the invocation.')
WHITE_SPACE ('\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('asList')
( ('(')
int ('int')
... ('...')
WHITE_SPACE (' ')
identifier ('values')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
handle ('handle')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
@ ('@')
identifier ('java')
: (':')
identifier ('Method')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('name')
: (':')
QUOTED_STRING_LITERAL ('"asList"')
, (',')
WHITE_SPACE ('\n    ')
identifier ('class')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"java.util.Arrays"')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE (' ')
external ('external')
; (';')
WHITE_SPACE ('\n\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('answer')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('42')
; (';')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// If a method is non-static, the receiver instance has to be provided as the first parameter.')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('javaList')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('asList')
( ('(')
DECIMAL_INTEGER_LITERAL ('1')
, (',')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('2')
, (',')
WHITE_SPACE (' ')
identifier ('answer')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('javaList')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
