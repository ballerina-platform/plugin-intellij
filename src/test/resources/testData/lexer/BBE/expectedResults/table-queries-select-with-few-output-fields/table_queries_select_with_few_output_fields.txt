import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// This `record` type represents a person.')
WHITE_SPACE ('\n')
type ('type')
WHITE_SPACE (' ')
identifier ('Person')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('id')
; (';')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('age')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
- ('-')
DECIMAL_INTEGER_LITERAL ('1')
; (';')
WHITE_SPACE ('\n    ')
float ('float')
WHITE_SPACE (' ')
identifier ('salary')
; (';')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('name')
; (';')
WHITE_SPACE ('\n    ')
boolean ('boolean')
WHITE_SPACE (' ')
identifier ('married')
; (';')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// This `record` type represents the public profile of a person.')
WHITE_SPACE ('\n')
type ('type')
WHITE_SPACE (' ')
identifier ('PersonPublicProfile')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('knownName')
; (';')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('age')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
- ('-')
DECIMAL_INTEGER_LITERAL ('1')
; (';')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('queryStmt')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('""')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// These are a few sample values, which represent different `Person` records.')
WHITE_SPACE ('\n    ')
identifier ('Person')
WHITE_SPACE (' ')
identifier ('p1')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE ('\n    ')
{ ('{')
identifier ('id')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
, (',')
WHITE_SPACE (' ')
identifier ('age')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('25')
, (',')
WHITE_SPACE (' ')
identifier ('salary')
: (':')
WHITE_SPACE (' ')
DECIMAL_FLOATING_POINT_NUMBER ('1000.50')
, (',')
WHITE_SPACE (' ')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"jane"')
, (',')
WHITE_SPACE (' ')
identifier ('married')
: (':')
WHITE_SPACE (' ')
BOOLEAN_LITERAL ('true')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('Person')
WHITE_SPACE (' ')
identifier ('p2')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE ('\n    ')
{ ('{')
identifier ('id')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('2')
, (',')
WHITE_SPACE (' ')
identifier ('age')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('26')
, (',')
WHITE_SPACE (' ')
identifier ('salary')
: (':')
WHITE_SPACE (' ')
DECIMAL_FLOATING_POINT_NUMBER ('1050.50')
, (',')
WHITE_SPACE (' ')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"kane"')
, (',')
WHITE_SPACE (' ')
identifier ('married')
: (':')
WHITE_SPACE (' ')
BOOLEAN_LITERAL ('false')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('Person')
WHITE_SPACE (' ')
identifier ('p3')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE ('\n    ')
{ ('{')
identifier ('id')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('3')
, (',')
WHITE_SPACE (' ')
identifier ('age')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('27')
, (',')
WHITE_SPACE (' ')
identifier ('salary')
: (':')
WHITE_SPACE (' ')
DECIMAL_FLOATING_POINT_NUMBER ('1200.50')
, (',')
WHITE_SPACE (' ')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"jack"')
, (',')
WHITE_SPACE (' ')
identifier ('married')
: (':')
WHITE_SPACE (' ')
BOOLEAN_LITERAL ('true')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('Person')
WHITE_SPACE (' ')
identifier ('p4')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE ('\n    ')
{ ('{')
identifier ('id')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('4')
, (',')
WHITE_SPACE (' ')
identifier ('age')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('28')
, (',')
WHITE_SPACE (' ')
identifier ('salary')
: (':')
WHITE_SPACE (' ')
DECIMAL_FLOATING_POINT_NUMBER ('1100.50')
, (',')
WHITE_SPACE (' ')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"alex"')
, (',')
WHITE_SPACE (' ')
identifier ('married')
: (':')
WHITE_SPACE (' ')
BOOLEAN_LITERAL ('false')
} ('}')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// This is the in-memory `table`, which is constrained by the `Person` type.')
WHITE_SPACE ('\n    ')
table ('table')
< ('<')
identifier ('Person')
> ('>')
WHITE_SPACE (' ')
identifier ('personTable')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
table ('table')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
{ ('{')
identifier ('id')
, (',')
WHITE_SPACE (' ')
identifier ('age')
, (',')
WHITE_SPACE (' ')
identifier ('salary')
, (',')
WHITE_SPACE (' ')
identifier ('name')
, (',')
WHITE_SPACE (' ')
identifier ('married')
} ('}')
, (',')
WHITE_SPACE ('\n        ')
[ ('[')
identifier ('p1')
, (',')
WHITE_SPACE (' ')
identifier ('p2')
, (',')
WHITE_SPACE (' ')
identifier ('p3')
, (',')
WHITE_SPACE (' ')
identifier ('p4')
] (']')
WHITE_SPACE ('\n    ')
} ('}')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// This prints the content of the `Person` table.')
WHITE_SPACE ('\n    ')
identifier ('printTable')
( ('(')
identifier ('queryStmt')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"The personTable:  "')
, (',')
WHITE_SPACE (' ')
identifier ('personTable')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Querying a `table` always returns a new in-memory `table`.')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Queries only a few fields in a `table` and returns the results as a new in-memory')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// `table` constrained by a different type.')
WHITE_SPACE ('\n    ')
table ('table')
< ('<')
identifier ('PersonPublicProfile')
> ('>')
WHITE_SPACE (' ')
identifier ('childTable')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
from ('from')
WHITE_SPACE (' ')
identifier ('personTable')
WHITE_SPACE ('\n                  ')
select ('select')
WHITE_SPACE (' ')
identifier ('name')
WHITE_SPACE (' ')
as ('as')
WHITE_SPACE (' ')
identifier ('knownName')
, (',')
WHITE_SPACE (' ')
identifier ('age')
; (';')
WHITE_SPACE ('\n    ')
identifier ('queryStmt')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"\ntable<PersonPublicProfile > childTable = "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE ('\n                    ')
QUOTED_STRING_LITERAL ('"from personTable select name as knownName, age;"')
; (';')
WHITE_SPACE ('\n    ')
identifier ('printTable')
( ('(')
identifier ('queryStmt')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"childTable: "')
, (',')
WHITE_SPACE (' ')
identifier ('childTable')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('printTable')
( ('(')
string ('string')
WHITE_SPACE (' ')
identifier ('stmt')
, (',')
WHITE_SPACE (' ')
string ('string')
WHITE_SPACE (' ')
identifier ('tableName')
, (',')
WHITE_SPACE (' ')
table ('table')
< ('<')
anydata ('anydata')
> ('>')
WHITE_SPACE (' ')
identifier ('returnedTable')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('stmt')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('tableName')
) (')')
; (';')
WHITE_SPACE ('\n    ')
foreach ('foreach')
WHITE_SPACE (' ')
var ('var')
WHITE_SPACE (' ')
identifier ('row')
WHITE_SPACE (' ')
in ('in')
WHITE_SPACE (' ')
identifier ('returnedTable')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n       ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('row')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
