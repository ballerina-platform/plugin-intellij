LINE_COMMENT ('// Ballerina WebSub Subscriber service, which subscribes to notifications at a Hub.')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('http')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('log')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('websub')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// The endpoint to which the subscriber service is bound.')
WHITE_SPACE ('\n')
listener ('listener')
WHITE_SPACE (' ')
identifier ('websub')
: (':')
identifier ('Listener')
WHITE_SPACE (' ')
identifier ('websubEP')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
( ('(')
DECIMAL_INTEGER_LITERAL ('8181')
) (')')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Annotations specifying the subscription parameters.')
WHITE_SPACE ('\n')
@ ('@')
identifier ('websub')
: (':')
identifier ('SubscriberServiceConfig')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('path')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"/websub"')
, (',')
WHITE_SPACE ('\n    ')
identifier ('subscribeOnStartUp')
: (':')
WHITE_SPACE (' ')
BOOLEAN_LITERAL ('true')
, (',')
WHITE_SPACE ('\n    ')
identifier ('target')
: (':')
[ ('[')
QUOTED_STRING_LITERAL ('"http://localhost:9191/websub/hub"')
, (',')
QUOTED_STRING_LITERAL ('"http://websubpubtopic.com"')
] (']')
, (',')
WHITE_SPACE ('\n    ')
identifier ('leaseSeconds')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('36000')
, (',')
WHITE_SPACE ('\n    ')
identifier ('secret')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Kslk30SNF2AChs2"')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n')
service ('service')
WHITE_SPACE (' ')
identifier ('websubSubscriber')
WHITE_SPACE (' ')
on ('on')
WHITE_SPACE (' ')
identifier ('websubEP')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Defines the resource that accepts the intent verification requests.')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// If the resource is not specified, intent verification happens automatically. It verifies if the topic')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// specified in the intent verification request matches the topic specified as the annotation.')
WHITE_SPACE ('\n    ')
resource ('resource')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('onIntentVerification')
( ('(')
identifier ('websub')
: (':')
identifier ('Caller')
WHITE_SPACE (' ')
identifier ('caller')
, (',')
WHITE_SPACE ('\n                                   ')
identifier ('websub')
: (':')
identifier ('IntentVerificationRequest')
WHITE_SPACE (' ')
identifier ('request')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
LINE_COMMENT ('// Builds the response for the subscription intent verification request that was received.')
WHITE_SPACE ('\n        ')
identifier ('http')
: (':')
identifier ('Response')
WHITE_SPACE (' ')
identifier ('response')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('request')
. ('.')
WHITE_SPACE ('\n            ')
identifier ('buildSubscriptionVerificationResponse')
( ('(')
QUOTED_STRING_LITERAL ('"http://websubpubtopic.com"')
) (')')
; (';')
WHITE_SPACE ('\n\n        ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('response')
. ('.')
identifier ('statusCode')
WHITE_SPACE (' ')
== ('==')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('202')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('log')
: (':')
identifier ('printInfo')
( ('(')
QUOTED_STRING_LITERAL ('"Intent verified for subscription request"')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('log')
: (':')
identifier ('printWarn')
( ('(')
QUOTED_STRING_LITERAL ('"Intent verification denied for subscription request"')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n        ')
var ('var')
WHITE_SPACE (' ')
identifier ('result')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('caller')
-> ('->')
identifier ('respond')
( ('(')
< ('<')
@ ('@')
identifier ('untainted')
> ('>')
WHITE_SPACE (' ')
identifier ('response')
) (')')
; (';')
WHITE_SPACE ('\n\n        ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('result')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
error ('error')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error responding to intent verification request"')
, (',')
WHITE_SPACE ('\n                                                        ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('result')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Defines the resource that accepts the content delivery requests.')
WHITE_SPACE ('\n    ')
resource ('resource')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('onNotification')
( ('(')
identifier ('websub')
: (':')
identifier ('Notification')
WHITE_SPACE (' ')
identifier ('notification')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
var ('var')
WHITE_SPACE (' ')
identifier ('payload')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('notification')
. ('.')
identifier ('getTextPayload')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n        ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('payload')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
string ('string')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('log')
: (':')
identifier ('printInfo')
( ('(')
QUOTED_STRING_LITERAL ('"WebSub Notification Received: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('payload')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error retrieving payload as string"')
, (',')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('payload')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
