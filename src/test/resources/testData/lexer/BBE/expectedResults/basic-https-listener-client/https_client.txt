import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('http')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('log')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// This is a client endpoint configured to connect to the HTTPS service.')
WHITE_SPACE ('\n')
LINE_COMMENT ('// As this is a 1-way SSL connection, the client needs to provide')
WHITE_SPACE ('\n')
LINE_COMMENT ('// trust store file path and its password.')
WHITE_SPACE ('\n')
identifier ('http')
: (':')
identifier ('ClientConfiguration')
WHITE_SPACE (' ')
identifier ('clientEPConfig')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('secureSocket')
: (':')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('trustStore')
: (':')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('path')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"${ballerina.home}/bre/security/ballerinaTruststore.p12"')
, (',')
WHITE_SPACE ('\n            ')
identifier ('password')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"ballerina"')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Create an HTTP client to interact with the created listener endpoint.')
WHITE_SPACE ('\n    ')
identifier ('http')
: (':')
identifier ('Client')
WHITE_SPACE (' ')
identifier ('clientEP')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
( ('(')
QUOTED_STRING_LITERAL ('"https://localhost:9095"')
, (',')
WHITE_SPACE (' ')
identifier ('clientEPConfig')
) (')')
; (';')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Sends an outbound request.')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('resp')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('clientEP')
-> ('->')
identifier ('get')
( ('(')
QUOTED_STRING_LITERAL ('"/hello/"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('resp')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
identifier ('http')
: (':')
identifier ('Response')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
LINE_COMMENT ('// If the request is successful, retrieve the text payload from the')
WHITE_SPACE ('\n        ')
LINE_COMMENT ('// response.')
WHITE_SPACE ('\n        ')
var ('var')
WHITE_SPACE (' ')
identifier ('payload')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('resp')
. ('.')
identifier ('getTextPayload')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n        ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('payload')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
string ('string')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
LINE_COMMENT ('// Log the retrieved text paylod.')
WHITE_SPACE ('\n            ')
identifier ('log')
: (':')
identifier ('printInfo')
( ('(')
identifier ('payload')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
LINE_COMMENT ('// If an error occurs when retrieving the text payload, log the error.')
WHITE_SPACE ('\n            ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
< ('<')
string ('string')
> ('>')
identifier ('payload')
. ('.')
identifier ('detail')
( ('(')
) (')')
[ ('[')
QUOTED_STRING_LITERAL ('"message"')
] (']')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
LINE_COMMENT ('// If an error occurs when getting the response, log the error.')
WHITE_SPACE ('\n        ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
< ('<')
string ('string')
> ('>')
identifier ('resp')
. ('.')
identifier ('detail')
( ('(')
) (')')
[ ('[')
QUOTED_STRING_LITERAL ('"message"')
] (']')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
