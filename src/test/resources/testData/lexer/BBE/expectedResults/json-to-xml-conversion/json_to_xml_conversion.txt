import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('xmlutils')
; (';')
WHITE_SPACE ('\n\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Creates a JSON object.')
WHITE_SPACE ('\n    ')
json ('json')
WHITE_SPACE (' ')
identifier ('j1')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
QUOTED_STRING_LITERAL ('"Store"')
: (':')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
QUOTED_STRING_LITERAL ('"@id"')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"AST"')
, (',')
WHITE_SPACE ('\n            ')
QUOTED_STRING_LITERAL ('"name"')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Anne"')
, (',')
WHITE_SPACE ('\n            ')
QUOTED_STRING_LITERAL ('"address"')
: (':')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n                ')
QUOTED_STRING_LITERAL ('"street"')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Main"')
, (',')
WHITE_SPACE ('\n                ')
QUOTED_STRING_LITERAL ('"city"')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"94"')
WHITE_SPACE ('\n            ')
} ('}')
, (',')
WHITE_SPACE ('\n            ')
QUOTED_STRING_LITERAL ('"codes"')
: (':')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"4"')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"8"')
] (']')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Converts the JSON object to XML using the default `attributePrefix`')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// and the default `arrayEntryTag`.')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('x1')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('xmlutils')
: (':')
identifier ('fromJSON')
( ('(')
identifier ('j1')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('x1')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
json ('json')
WHITE_SPACE (' ')
identifier ('j2')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
QUOTED_STRING_LITERAL ('"Store"')
: (':')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
QUOTED_STRING_LITERAL ('"#id"')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"AST"')
, (',')
WHITE_SPACE ('\n            ')
QUOTED_STRING_LITERAL ('"name"')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Anne"')
, (',')
WHITE_SPACE ('\n            ')
QUOTED_STRING_LITERAL ('"address"')
: (':')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n                ')
QUOTED_STRING_LITERAL ('"street"')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Main"')
, (',')
WHITE_SPACE ('\n                ')
QUOTED_STRING_LITERAL ('"city"')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"94"')
WHITE_SPACE ('\n            ')
} ('}')
, (',')
WHITE_SPACE ('\n            ')
QUOTED_STRING_LITERAL ('"codes"')
: (':')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"4"')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"8"')
] (']')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Converts the JSON object to XML using a custom `attributePrefix` (i.e., the `#` character)')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// and the custom `arrayEntryTag` (i.e., `wrapper`).')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('x2')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('xmlutils')
: (':')
identifier ('fromJSON')
( ('(')
identifier ('j2')
, (',')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('attributePrefix')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"#"')
, (',')
WHITE_SPACE (' ')
identifier ('arrayEntryTag')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"wrapper"')
WHITE_SPACE (' ')
} ('}')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('x2')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
