import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// JSON Arrays are arrays with JSON values as members.')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// The same could be written as')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// `json[] j1 = [1, false, null, "foo", { first: "John", last: "Pala" }];`')
WHITE_SPACE ('\n    ')
json ('json')
WHITE_SPACE (' ')
identifier ('j1')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
[ ('[')
DECIMAL_INTEGER_LITERAL ('1')
, (',')
WHITE_SPACE (' ')
BOOLEAN_LITERAL ('false')
, (',')
WHITE_SPACE (' ')
NULL_LITERAL ('null')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"foo"')
, (',')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('first')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"John"')
, (',')
WHITE_SPACE (' ')
identifier ('last')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Pala"')
WHITE_SPACE (' ')
} ('}')
] (']')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('j1')
. ('.')
identifier ('toJsonString')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// JSON array elements can be accessed by index.')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// The `json` value `j1` first needs to be cast to a `json[]` to use member access.')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Alternatively, `j1` could have been defined as a `json[]`.')
WHITE_SPACE ('\n    ')
json ('json')
[ ('[')
] (']')
WHITE_SPACE (' ')
identifier ('j2')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
< ('<')
json ('json')
[ ('[')
] (']')
> ('>')
WHITE_SPACE (' ')
identifier ('j1')
; (';')
WHITE_SPACE ('\n    ')
json ('json')
WHITE_SPACE (' ')
identifier ('j3')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('j2')
[ ('[')
DECIMAL_INTEGER_LITERAL ('4')
] (']')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('j3')
. ('.')
identifier ('toJsonString')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Similarly, member access could be used with `json[]`-typed variables to add or')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// change members in a `json` array.')
WHITE_SPACE ('\n    ')
identifier ('j2')
[ ('[')
DECIMAL_INTEGER_LITERAL ('4')
] (']')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_FLOATING_POINT_NUMBER ('8.00')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('j1')
. ('.')
identifier ('toJsonString')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// JSON array in an object literal.')
WHITE_SPACE ('\n    ')
map ('map')
< ('<')
json ('json')
> ('>')
WHITE_SPACE (' ')
identifier ('p')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('fname')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"John"')
, (',')
WHITE_SPACE ('\n        ')
identifier ('lname')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Stallone"')
, (',')
WHITE_SPACE ('\n        ')
identifier ('family')
: (':')
WHITE_SPACE (' ')
[ ('[')
WHITE_SPACE ('\n            ')
{ ('{')
WHITE_SPACE (' ')
identifier ('fname')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Peter"')
, (',')
WHITE_SPACE (' ')
identifier ('lname')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Stallone"')
WHITE_SPACE (' ')
} ('}')
, (',')
WHITE_SPACE ('\n            ')
{ ('{')
WHITE_SPACE (' ')
identifier ('fname')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Emma"')
, (',')
WHITE_SPACE (' ')
identifier ('lname')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Stallone"')
WHITE_SPACE (' ')
} ('}')
, (',')
WHITE_SPACE ('\n            ')
{ ('{')
WHITE_SPACE (' ')
identifier ('fname')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Jena"')
, (',')
WHITE_SPACE (' ')
identifier ('lname')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Stallone"')
WHITE_SPACE (' ')
} ('}')
, (',')
WHITE_SPACE ('\n            ')
{ ('{')
WHITE_SPACE (' ')
identifier ('fname')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Paul"')
, (',')
WHITE_SPACE (' ')
identifier ('lname')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Stallone"')
WHITE_SPACE (' ')
} ('}')
WHITE_SPACE ('\n        ')
] (']')
WHITE_SPACE ('\n    ')
} ('}')
; (';')
WHITE_SPACE ('\n\n    ')
json ('json')
[ ('[')
] (']')
WHITE_SPACE (' ')
identifier ('family')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
< ('<')
json ('json')
[ ('[')
] (']')
> ('>')
WHITE_SPACE (' ')
identifier ('p')
[ ('[')
QUOTED_STRING_LITERAL ('"family"')
] (']')
; (';')
WHITE_SPACE ('\n    ')
map ('map')
< ('<')
json ('json')
> ('>')
WHITE_SPACE (' ')
identifier ('member2')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
< ('<')
map ('map')
< ('<')
json ('json')
> ('>')
> ('>')
WHITE_SPACE (' ')
identifier ('family')
[ ('[')
DECIMAL_INTEGER_LITERAL ('2')
] (']')
; (';')
WHITE_SPACE ('\n    ')
identifier ('member2')
[ ('[')
QUOTED_STRING_LITERAL ('"fname"')
] (']')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Alisha"')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('p')
. ('.')
identifier ('toJsonString')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Get the length of the JSON array.')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('l')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('family')
. ('.')
identifier ('length')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"length of the array: "')
, (',')
WHITE_SPACE (' ')
identifier ('l')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Loop through the array.')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('i')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('0')
; (';')
WHITE_SPACE ('\n    ')
while ('while')
WHITE_SPACE (' ')
( ('(')
identifier ('i')
WHITE_SPACE (' ')
< ('<')
WHITE_SPACE (' ')
identifier ('l')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('family')
[ ('[')
identifier ('i')
] (']')
. ('.')
identifier ('toJsonString')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n        ')
identifier ('i')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('i')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
