LINE_COMMENT ('// This is client implementation for bidirectional streaming scenario.')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('grpc')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('runtime')
; (';')
WHITE_SPACE ('\n\n')
int ('int')
WHITE_SPACE (' ')
identifier ('total')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('0')
; (';')
WHITE_SPACE ('\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('//Client endpoint configuration.')
WHITE_SPACE ('\n    ')
identifier ('ChatClient')
WHITE_SPACE (' ')
identifier ('chatEp')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
( ('(')
QUOTED_STRING_LITERAL ('"http://localhost:9090"')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
identifier ('grpc')
: (':')
identifier ('StreamingClient')
WHITE_SPACE (' ')
identifier ('ep')
; (';')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Executes unary non-blocking call registering server message listener.')
WHITE_SPACE ('\n    ')
var ('var')
WHITE_SPACE (' ')
identifier ('res')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('chatEp')
-> ('->')
identifier ('chat')
( ('(')
identifier ('ChatMessageListener')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('res')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
identifier ('grpc')
: (':')
identifier ('Error')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Error from Connector: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('res')
. ('.')
identifier ('reason')
( ('(')
) (')')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('" - "')
WHITE_SPACE ('\n                                  ')
+ ('+')
WHITE_SPACE (' ')
< ('<')
string ('string')
> ('>')
WHITE_SPACE (' ')
identifier ('res')
. ('.')
identifier ('detail')
( ('(')
) (')')
[ ('[')
QUOTED_STRING_LITERAL ('"message"')
] (']')
) (')')
; (';')
WHITE_SPACE ('\n        ')
return ('return')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Initialized connection sucessfully."')
) (')')
; (';')
WHITE_SPACE ('\n        ')
identifier ('ep')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('res')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Sends multiple messages to the server.')
WHITE_SPACE ('\n    ')
identifier ('ChatMessage')
WHITE_SPACE (' ')
identifier ('mes')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Sam"')
, (',')
WHITE_SPACE (' ')
identifier ('message')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Hi "')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('grpc')
: (':')
identifier ('Error')
? ('?')
WHITE_SPACE (' ')
identifier ('connErr')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('ep')
-> ('->')
identifier ('send')
( ('(')
identifier ('mes')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('connErr')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
identifier ('grpc')
: (':')
identifier ('Error')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Error from Connector: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('connErr')
. ('.')
identifier ('reason')
( ('(')
) (')')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('" - "')
WHITE_SPACE ('\n                               ')
+ ('+')
WHITE_SPACE (' ')
< ('<')
string ('string')
> ('>')
WHITE_SPACE (' ')
identifier ('connErr')
. ('.')
identifier ('detail')
( ('(')
) (')')
[ ('[')
QUOTED_STRING_LITERAL ('"message"')
] (']')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
identifier ('runtime')
: (':')
identifier ('sleep')
( ('(')
DECIMAL_INTEGER_LITERAL ('6000')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Once all messages are sent, client send complete message to notify the server, Iâ€™m done.')
WHITE_SPACE ('\n    ')
identifier ('grpc')
: (':')
identifier ('Error')
? ('?')
WHITE_SPACE (' ')
identifier ('result')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('ep')
-> ('->')
identifier ('complete')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n    ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('result')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
identifier ('grpc')
: (':')
identifier ('Error')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Error in sending complete message"')
, (',')
WHITE_SPACE (' ')
identifier ('result')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n\n')
service ('service')
WHITE_SPACE (' ')
identifier ('ChatMessageListener')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
service ('service')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Resource registered to receive server messages.')
WHITE_SPACE ('\n    ')
resource ('resource')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('onMessage')
( ('(')
string ('string')
WHITE_SPACE (' ')
identifier ('message')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Response received from server: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('message')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Resource registered to receive server error messages.')
WHITE_SPACE ('\n    ')
resource ('resource')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('onError')
( ('(')
error ('error')
WHITE_SPACE (' ')
identifier ('err')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Error reported from server: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('err')
. ('.')
identifier ('reason')
( ('(')
) (')')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('" - "')
WHITE_SPACE ('\n                                  ')
+ ('+')
WHITE_SPACE (' ')
< ('<')
string ('string')
> ('>')
WHITE_SPACE (' ')
identifier ('err')
. ('.')
identifier ('detail')
( ('(')
) (')')
[ ('[')
QUOTED_STRING_LITERAL ('"message"')
] (']')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Resource registered to receive server completed message.')
WHITE_SPACE ('\n    ')
resource ('resource')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('onComplete')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Server Complete Sending Responses."')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
; (';')
