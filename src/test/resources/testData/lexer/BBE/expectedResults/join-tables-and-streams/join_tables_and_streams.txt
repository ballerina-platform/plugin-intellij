import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('runtime')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('//This is the `record`, which holds item details in the stockTable.')
WHITE_SPACE ('\n')
type ('type')
WHITE_SPACE (' ')
identifier ('Item')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
LEFT_CLOSED_RECORD_DELIMITER ('{|')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('name')
; (';')
WHITE_SPACE ('\n    ')
float ('float')
WHITE_SPACE (' ')
identifier ('price')
; (';')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('stockAmount')
; (';')
WHITE_SPACE ('\n')
RIGHT_CLOSED_RECORD_DELIMITER ('|}')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('//This is the `record`, which holds order events from the customer.')
WHITE_SPACE ('\n')
type ('type')
WHITE_SPACE (' ')
identifier ('Order')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
LEFT_CLOSED_RECORD_DELIMITER ('{|')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('itemName')
; (';')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('orderingAmount')
; (';')
WHITE_SPACE ('\n')
RIGHT_CLOSED_RECORD_DELIMITER ('|}')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('//This is the `record`, which holds alert events.')
WHITE_SPACE ('\n')
type ('type')
WHITE_SPACE (' ')
identifier ('OutOfStockAlert')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
LEFT_CLOSED_RECORD_DELIMITER ('{|')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('itemName')
; (';')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('stockAmount')
; (';')
WHITE_SPACE ('\n')
RIGHT_CLOSED_RECORD_DELIMITER ('|}')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// This is the input `stream`, which uses `Order` as the constraint type.')
WHITE_SPACE ('\n')
stream ('stream')
< ('<')
identifier ('Order')
> ('>')
WHITE_SPACE (' ')
identifier ('orderStream')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// This is the `table`, which holds the item stock data.')
WHITE_SPACE ('\n')
table ('table')
< ('<')
identifier ('Item')
> ('>')
WHITE_SPACE (' ')
identifier ('itemStockTable')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
table ('table')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
{ ('{')
WHITE_SPACE (' ')
identifier ('name')
, (',')
WHITE_SPACE (' ')
identifier ('price')
, (',')
WHITE_SPACE (' ')
identifier ('stockAmount')
WHITE_SPACE (' ')
} ('}')
, (',')
WHITE_SPACE ('\n    ')
[ ('[')
WHITE_SPACE ('\n        ')
{ ('{')
QUOTED_STRING_LITERAL ('"Book"')
, (',')
WHITE_SPACE (' ')
DECIMAL_FLOATING_POINT_NUMBER ('100.0')
, (',')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('10')
} ('}')
, (',')
WHITE_SPACE ('\n        ')
{ ('{')
QUOTED_STRING_LITERAL ('"Pen"')
, (',')
WHITE_SPACE (' ')
DECIMAL_FLOATING_POINT_NUMBER ('20.0')
, (',')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('4')
} ('}')
WHITE_SPACE ('\n    ')
] (']')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// This is the output stream, which contains the events/alerts that are generated based on the streaming logic.')
WHITE_SPACE ('\n')
stream ('stream')
< ('<')
identifier ('OutOfStockAlert')
> ('>')
WHITE_SPACE (' ')
identifier ('oredrAlertStream')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
; (';')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('initOutOfStockAlert')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Whenever an order event is published to the `orderStream`, it is matched against the `itemStockTable` through')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('//the `queryItemTable` function. If there is a match, an alert event is published to the `orderAlertStream`.')
WHITE_SPACE ('\n    ')
forever ('forever')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
from ('from')
WHITE_SPACE (' ')
identifier ('orderStream')
WHITE_SPACE (' ')
window ('window')
WHITE_SPACE (' ')
identifier ('length')
( ('(')
DECIMAL_INTEGER_LITERAL ('1')
) (')')
WHITE_SPACE (' ')
as ('as')
WHITE_SPACE (' ')
identifier ('itemOrder')
WHITE_SPACE ('\n        ')
join ('join')
WHITE_SPACE (' ')
identifier ('queryItemTable')
( ('(')
identifier ('itemOrder')
. ('.')
identifier ('itemName')
, (',')
WHITE_SPACE (' ')
identifier ('itemOrder')
. ('.')
identifier ('orderingAmount')
) (')')
WHITE_SPACE (' ')
as ('as')
WHITE_SPACE (' ')
identifier ('item')
WHITE_SPACE ('\n        ')
select ('select')
WHITE_SPACE (' ')
identifier ('item')
. ('.')
identifier ('name')
WHITE_SPACE (' ')
as ('as')
WHITE_SPACE (' ')
identifier ('itemName')
, (',')
WHITE_SPACE (' ')
identifier ('item')
. ('.')
identifier ('stockAmount')
WHITE_SPACE ('\n        ')
=> ('=>')
WHITE_SPACE (' ')
( ('(')
identifier ('OutOfStockAlert')
[ ('[')
] (']')
WHITE_SPACE (' ')
identifier ('alerts')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
foreach ('foreach')
WHITE_SPACE (' ')
var ('var')
WHITE_SPACE (' ')
identifier ('alert')
WHITE_SPACE (' ')
in ('in')
WHITE_SPACE (' ')
identifier ('alerts')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n                ')
identifier ('oredrAlertStream')
. ('.')
identifier ('publish')
( ('(')
identifier ('alert')
) (')')
; (';')
WHITE_SPACE ('\n            ')
} ('}')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('//The `queryItemTable` function returns a `table` of items whose stock is not enough to satisfy the order.')
WHITE_SPACE ('\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('queryItemTable')
( ('(')
string ('string')
WHITE_SPACE (' ')
identifier ('itemName')
, (',')
WHITE_SPACE (' ')
int ('int')
WHITE_SPACE (' ')
identifier ('orderingAmount')
) (')')
WHITE_SPACE ('\n        ')
returns ('returns')
WHITE_SPACE (' ')
table ('table')
< ('<')
identifier ('Item')
> ('>')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
table ('table')
< ('<')
identifier ('Item')
> ('>')
WHITE_SPACE (' ')
identifier ('result')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
table ('table')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
{ ('{')
WHITE_SPACE (' ')
identifier ('name')
, (',')
WHITE_SPACE (' ')
identifier ('price')
, (',')
WHITE_SPACE (' ')
identifier ('stockAmount')
WHITE_SPACE (' ')
} ('}')
, (',')
WHITE_SPACE (' ')
[ ('[')
] (']')
WHITE_SPACE ('\n    ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
foreach ('foreach')
WHITE_SPACE (' ')
var ('var')
WHITE_SPACE (' ')
identifier ('item')
WHITE_SPACE (' ')
in ('in')
WHITE_SPACE (' ')
identifier ('itemStockTable')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('item')
. ('.')
identifier ('name')
WHITE_SPACE (' ')
== ('==')
WHITE_SPACE (' ')
identifier ('itemName')
WHITE_SPACE (' ')
&& ('&&')
WHITE_SPACE (' ')
identifier ('orderingAmount')
WHITE_SPACE (' ')
> ('>')
WHITE_SPACE (' ')
identifier ('item')
. ('.')
identifier ('stockAmount')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
var ('var')
WHITE_SPACE (' ')
identifier ('ret')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('result')
. ('.')
identifier ('add')
( ('(')
identifier ('item')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
return ('return')
WHITE_SPACE (' ')
identifier ('result')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('initOutOfStockAlert')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
identifier ('Order')
WHITE_SPACE (' ')
identifier ('order1')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('itemName')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Pen"')
, (',')
WHITE_SPACE (' ')
identifier ('orderingAmount')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('5')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('Order')
WHITE_SPACE (' ')
identifier ('order2')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('itemName')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Book"')
, (',')
WHITE_SPACE (' ')
identifier ('orderingAmount')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('2')
} ('}')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Whenever the `orderAlertStream` stream receives an event from the streaming rules defined in the `forever`')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// block, the `printOutOfStocksAlert` function is invoked.')
WHITE_SPACE ('\n    ')
identifier ('oredrAlertStream')
. ('.')
identifier ('subscribe')
( ('(')
identifier ('printOutOfStocksAlert')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
identifier ('orderStream')
. ('.')
identifier ('publish')
( ('(')
identifier ('order1')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('runtime')
: (':')
identifier ('sleep')
( ('(')
DECIMAL_INTEGER_LITERAL ('500')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('orderStream')
. ('.')
identifier ('publish')
( ('(')
identifier ('order2')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('runtime')
: (':')
identifier ('sleep')
( ('(')
DECIMAL_INTEGER_LITERAL ('500')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('printOutOfStocksAlert')
( ('(')
identifier ('OutOfStockAlert')
WHITE_SPACE (' ')
identifier ('a')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Alert! : "')
, (',')
WHITE_SPACE (' ')
identifier ('a')
. ('.')
identifier ('itemName')
, (',')
WHITE_SPACE ('\n            ')
QUOTED_STRING_LITERAL ('" stock is not enough to satisfy the order."')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
