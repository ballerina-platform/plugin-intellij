import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('http')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('log')
; (';')
WHITE_SPACE ('\n\n')
@ ('@')
identifier ('http')
: (':')
identifier ('ServiceConfig')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('basePath')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"/hello"')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n')
service ('service')
WHITE_SPACE (' ')
identifier ('httpService')
WHITE_SPACE (' ')
on ('on')
WHITE_SPACE (' ')
new ('new')
WHITE_SPACE (' ')
identifier ('http')
: (':')
identifier ('Listener')
( ('(')
DECIMAL_INTEGER_LITERAL ('9090')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// This is an HTTP resource.')
WHITE_SPACE ('\n    ')
@ ('@')
identifier ('http')
: (':')
identifier ('ResourceConfig')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('path')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"/world"')
, (',')
WHITE_SPACE ('\n        ')
identifier ('methods')
: (':')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"POST"')
] (']')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
resource ('resource')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('httpResource')
( ('(')
identifier ('http')
: (':')
identifier ('Caller')
WHITE_SPACE (' ')
identifier ('caller')
, (',')
WHITE_SPACE (' ')
identifier ('http')
: (':')
identifier ('Request')
WHITE_SPACE (' ')
identifier ('req')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('http')
: (':')
identifier ('Response')
WHITE_SPACE (' ')
identifier ('resp')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
; (';')
WHITE_SPACE ('\n        ')
var ('var')
WHITE_SPACE (' ')
identifier ('payload')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('req')
. ('.')
identifier ('getTextPayload')
( ('(')
) (')')
; (';')
WHITE_SPACE ('\n        ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('payload')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
error ('error')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error sending message"')
, (',')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('payload')
) (')')
; (';')
WHITE_SPACE ('\n            ')
identifier ('resp')
. ('.')
identifier ('setPayload')
( ('(')
QUOTED_STRING_LITERAL ('"Error in payload"')
) (')')
; (';')
WHITE_SPACE ('\n            ')
identifier ('resp')
. ('.')
identifier ('statusCode')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('500')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE (' ')
else ('else')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('payload')
) (')')
; (';')
WHITE_SPACE ('\n            ')
identifier ('resp')
. ('.')
identifier ('setPayload')
( ('(')
STRING_TEMPLATE_LITERAL_START ('string `')
STRING_TEMPLATE_EXPRESSION_START ('HTTP POST received: ${')
< ('<')
@ ('@')
identifier ('untainted')
> ('>')
WHITE_SPACE (' ')
identifier ('payload')
STRING_TEMPLATE_EXPRESSION_END ('}')
STRING_TEMPLATE_LITERAL_END ('`')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n\n        ')
var ('var')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('caller')
-> ('->')
identifier ('respond')
( ('(')
identifier ('resp')
) (')')
; (';')
WHITE_SPACE ('\n        ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('err')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
error ('error')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error in responding"')
, (',')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('err')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// This is an HTTP to WebSocket upgrade resource. This is defined using the WebSocket upgrade resource config.')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Here you have access to the `http:Request` and to the query and path params where applicable.')
WHITE_SPACE ('\n    ')
@ ('@')
identifier ('http')
: (':')
identifier ('ResourceConfig')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('webSocketUpgrade')
: (':')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n                ')
identifier ('upgradePath')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"/ws"')
, (',')
WHITE_SPACE ('\n                ')
identifier ('upgradeService')
: (':')
WHITE_SPACE (' ')
identifier ('wsService')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
resource ('resource')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('upgrader')
( ('(')
identifier ('http')
: (':')
identifier ('Caller')
WHITE_SPACE (' ')
identifier ('caller')
, (',')
WHITE_SPACE (' ')
identifier ('http')
: (':')
identifier ('Request')
WHITE_SPACE (' ')
identifier ('req')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n\n')
LINE_COMMENT ('// Note: When a WebSocket upgrade path is defined in HTTP resource configuration. <br>')
WHITE_SPACE ('\n')
LINE_COMMENT ('// - Without service configuration for WebSocketService default values are taken for sub protocols, idle timeout etc.<br>')
WHITE_SPACE ('\n')
LINE_COMMENT ('// - If  `WebSocketServiceConfig` is defined without the path, sub protocols, idle timeout etc. can be configured.<br>')
WHITE_SPACE ('\n')
LINE_COMMENT ('// - If path is defined in the `WebSocketServiceConfig` it shall be ignored.<br>')
WHITE_SPACE ('\n')
LINE_COMMENT ('// - This service can also be bound to a different `Listener` in which case the path configuration becomes useful.')
WHITE_SPACE ('\n')
service ('service')
WHITE_SPACE (' ')
identifier ('wsService')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
@ ('@')
identifier ('http')
: (':')
identifier ('WebSocketServiceConfig')
WHITE_SPACE (' ')
{ ('{')
identifier ('subProtocols')
: (':')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"xml, json"')
] (']')
WHITE_SPACE ('\n                                         ')
, (',')
identifier ('idleTimeoutInSeconds')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('20')
} ('}')
WHITE_SPACE (' ')
service ('service')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
resource ('resource')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('onOpen')
( ('(')
identifier ('http')
: (':')
identifier ('WebSocketCaller')
WHITE_SPACE (' ')
identifier ('caller')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"New WebSocket connection: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('caller')
. ('.')
identifier ('getConnectionId')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
resource ('resource')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('onText')
( ('(')
identifier ('http')
: (':')
identifier ('WebSocketCaller')
WHITE_SPACE (' ')
identifier ('caller')
, (',')
WHITE_SPACE (' ')
string ('string')
WHITE_SPACE (' ')
identifier ('text')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('text')
) (')')
; (';')
WHITE_SPACE ('\n        ')
var ('var')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('caller')
-> ('->')
identifier ('pushText')
( ('(')
identifier ('text')
) (')')
; (';')
WHITE_SPACE ('\n        ')
if ('if')
WHITE_SPACE (' ')
( ('(')
identifier ('err')
WHITE_SPACE (' ')
is ('is')
WHITE_SPACE (' ')
error ('error')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n            ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
QUOTED_STRING_LITERAL ('"Error sending message"')
, (',')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('err')
) (')')
; (';')
WHITE_SPACE ('\n        ')
} ('}')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
resource ('resource')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('onIdleTimeout')
( ('(')
identifier ('http')
: (':')
identifier ('WebSocketCaller')
WHITE_SPACE (' ')
identifier ('caller')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Idle timeout: "')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('caller')
. ('.')
identifier ('getConnectionId')
( ('(')
) (')')
) (')')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
; (';')
