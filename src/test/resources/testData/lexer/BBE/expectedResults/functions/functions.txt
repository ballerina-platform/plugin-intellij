import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// This function takes a `string` argument. However, it does not return a value.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('printValue')
( ('(')
string ('string')
WHITE_SPACE (' ')
identifier ('value')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('value')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// This function takes in two `int` values as arguments and returns their')
WHITE_SPACE ('\n')
LINE_COMMENT ('// sum as an integer.')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('add')
( ('(')
int ('int')
WHITE_SPACE (' ')
identifier ('a')
, (',')
WHITE_SPACE (' ')
int ('int')
WHITE_SPACE (' ')
identifier ('b')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
int ('int')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
return ('return')
WHITE_SPACE (' ')
identifier ('a')
WHITE_SPACE (' ')
+ ('+')
WHITE_SPACE (' ')
identifier ('b')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
function ('function')
WHITE_SPACE (' ')
identifier ('printAndReturnValue')
( ('(')
string ('string')
WHITE_SPACE (' ')
identifier ('s')
) (')')
WHITE_SPACE (' ')
returns ('returns')
WHITE_SPACE (' ')
string ('string')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('t')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Hello "')
. ('.')
identifier ('concat')
( ('(')
identifier ('s')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('t')
) (')')
; (';')
WHITE_SPACE ('\n    ')
return ('return')
WHITE_SPACE (' ')
identifier ('t')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// A public function named `main` is considered as a default entry point of a')
WHITE_SPACE ('\n')
LINE_COMMENT ('// Ballerina program.')
WHITE_SPACE ('\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Call the `printValue()` function that prints the value provided.')
WHITE_SPACE ('\n    ')
identifier ('printValue')
( ('(')
QUOTED_STRING_LITERAL ('"This is a sample text"')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Call the `add()` function to retrieve the result of adding two given values.')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('result')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('add')
( ('(')
DECIMAL_INTEGER_LITERAL ('5')
, (',')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('6')
) (')')
; (';')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Print the result.')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
identifier ('result')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Ballerina does not allow ignoring the return value of a function')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// invocation implicitly unless the return type is `()`. A return value can be ignored')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// using `_` if the value may never be an `error` (i.e., the return type of the')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// function does not contain `error`).')
WHITE_SPACE ('\n    ')
identifier ('_')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('printAndReturnValue')
( ('(')
QUOTED_STRING_LITERAL ('"World"')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
