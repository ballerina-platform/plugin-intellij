import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
type ('type')
WHITE_SPACE (' ')
identifier ('Person')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('name')
; (';')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('age')
; (';')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
type ('type')
WHITE_SPACE (' ')
identifier ('Employee')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('name')
; (';')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('age')
; (';')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('empNo')
; (';')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
type ('type')
WHITE_SPACE (' ')
identifier ('Department')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('code')
; (';')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
public ('public')
WHITE_SPACE (' ')
function ('function')
WHITE_SPACE (' ')
identifier ('main')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Define an `Employee` value and cast it to a `Person`.')
WHITE_SPACE ('\n    ')
identifier ('Employee')
WHITE_SPACE (' ')
identifier ('employee')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('name')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Jane Doe"')
, (',')
WHITE_SPACE (' ')
identifier ('age')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('25')
, (',')
WHITE_SPACE (' ')
identifier ('empNo')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('1')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
identifier ('Person')
WHITE_SPACE (' ')
identifier ('person')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
< ('<')
identifier ('Person')
> ('>')
WHITE_SPACE (' ')
identifier ('employee')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Person Name: "')
, (',')
WHITE_SPACE (' ')
identifier ('person')
. ('.')
identifier ('name')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Person Age: "')
, (',')
WHITE_SPACE (' ')
identifier ('person')
. ('.')
identifier ('age')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Cast the value held by the `person` variable to an `Employee`.')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// This should succeed since `person` holds an `Employee` value.')
WHITE_SPACE ('\n    ')
identifier ('Employee')
WHITE_SPACE (' ')
identifier ('employeeTwo')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
< ('<')
identifier ('Employee')
> ('>')
WHITE_SPACE (' ')
identifier ('person')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Employee Name: "')
, (',')
WHITE_SPACE (' ')
identifier ('employeeTwo')
. ('.')
identifier ('name')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Employee Age: "')
, (',')
WHITE_SPACE (' ')
identifier ('employeeTwo')
. ('.')
identifier ('age')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Cast an `int` value held by an `anydata` typed variable as an')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// `int` value.')
WHITE_SPACE ('\n    ')
anydata ('anydata')
WHITE_SPACE (' ')
identifier ('value')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('100')
; (';')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('i')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
< ('<')
int ('int')
> ('>')
WHITE_SPACE (' ')
identifier ('value')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Integer Value: "')
, (',')
WHITE_SPACE (' ')
identifier ('i')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Use the type cast expression with `value`, which currently holds')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// an `int` value, to cast it to `float`.')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// A numeric conversion would happen from `int` to `float`.')
WHITE_SPACE ('\n    ')
float ('float')
WHITE_SPACE (' ')
identifier ('f')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
< ('<')
float ('float')
> ('>')
WHITE_SPACE (' ')
identifier ('value')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Converted Float Value: "')
, (',')
WHITE_SPACE (' ')
identifier ('f')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Casting to a union type would also work similarly.')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// If `value` belongs to the union type, the resultant value would')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// be `value` itself. Else, if applicable, a numeric conversion will')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// be attempted.')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// A numeric conversion would happen from `int` to `float` here.')
WHITE_SPACE ('\n    ')
float ('float')
| ('|')
boolean ('boolean')
WHITE_SPACE (' ')
identifier ('u')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
< ('<')
float ('float')
| ('|')
boolean ('boolean')
> ('>')
WHITE_SPACE (' ')
identifier ('value')
; (';')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"Converted Float Value: "')
, (',')
WHITE_SPACE (' ')
identifier ('u')
) (')')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('// Assign `employee` to `value`.')
WHITE_SPACE ('\n    ')
identifier ('value')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('employee')
; (';')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// Casting a value to an incorrect type (the value does not belong')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// to the type and numeric conversion is not possible) would result')
WHITE_SPACE ('\n    ')
LINE_COMMENT ('// in an abrupt completion with a panic.')
WHITE_SPACE ('\n    ')
identifier ('Department')
WHITE_SPACE (' ')
identifier ('department')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
< ('<')
identifier ('Department')
> ('>')
WHITE_SPACE (' ')
identifier ('value')
; (';')
WHITE_SPACE ('\n')
} ('}')
